{"version":3,"sources":["Components/404/Page404.tsx","api/fridayProject-api.ts","Redux/app-reducer.ts","Redux/login-reducer.tsx","SuperComponents/c1-SuperInputText/SuperInputText.tsx","SuperComponents/c2-SuperButton/SuperButton.tsx","SuperComponents/c3-SuperCheckbox/SuperCheckbox.tsx","Common/Preloader/Circles-menu.gif","Common/Preloader/Preloader.tsx","Components/Loginization/Loginization.tsx","Redux/new-password-reducer.tsx","Components/NewPassword/NewPassword.tsx","Redux/password-recovery-reducer.tsx","Components/PasswordRecovery/CheckEmail/iconemail.png","Components/PasswordRecovery/CheckEmail/CheckEmail.tsx","Components/PasswordRecovery/PasswordRecovery.tsx","Components/Profile/Profile.tsx","Redux/reg-reducer.tsx","Components/Registration/Registration.tsx","Components/TestPage/TestPage.tsx","api/packs-api.ts","Redux/packs-reducer.tsx","Redux/cards-reducer.tsx","Common/Search/Range/RangeSlider.tsx","Common/Search/Search.tsx","Modal/DeleteModal.tsx","Modal/UpdateModal.tsx","Components/Packs/Pack/Pack.tsx","Common/Paginator/Paginator.tsx","Common/SortButton/SortButton.tsx","Modal/AddedModal.tsx","Components/Packs/Packs.tsx","Components/Cards/Cards.tsx","Components/LearnPage/LearnPage.tsx","Routes.tsx","Header.tsx","App.tsx","reportWebVitals.ts","Redux/profile-reducer.tsx","Redux/store.ts","index.tsx","Components/Registration/Registration.module.css","Components/Loginization/Loginization.module.css","Components/Cards/Cards.module.css","Components/PasswordRecovery/PasswordRecovery.module.css","Components/Packs/Packs.module.css","Components/NewPassword/NewPassword.module.css","Components/PasswordRecovery/CheckEmail/CheckEmail.module.css","Components/Packs/Pack/Pack.module.css","Common/Paginator/Paginator.module.css","SuperComponents/c1-SuperInputText/SuperInputText.module.css","SuperComponents/c2-SuperButton/SuperButton.module.css","SuperComponents/c3-SuperCheckbox/SuperCheckbox.module.css","Components/404/Page404.module.css","Common/Search/Search.module.css"],"names":["Page404","className","s","container","instance","axios","create","withCredentials","baseURL","authApi","post","email","password","rememberMe","delete","from","message","resetPasswordToken","initialState","status","setAppStatusAC","type","appReducer","state","action","userData","isAuth","error","getUserDataAC","profileData","setErrorAC","isLoggedInAC","_id","authTC","dispatch","then","res","data","catch","err","response","finally","loginReducer","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","isType","errorMessage","spanClassName","restProps","finalSpanClassName","TextField","color","label","F","e","currentTarget","value","trim","key","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","finalInputClassName","checkbox","Checkbox","checked","Preloader","alt","src","preloader","Loginization","useDispatch","useState","setEmail","setPassword","setRememberMe","useSelector","loginPage","app","to","loginContainer","title","subTitle","info","bold","formSummaryError","inputs","placeholder","remember","forgot","PATH","RECOVERY_PASS","onClick","loginTC","style","width","regBlock","REGISTRATION","isInitialized","setAppErrorAC","newPasswordReducer","NewPassword","passwordConf","setPasswordConf","token","useParams","newPassPage","newPassContainer","disabled","newPassTC","PasswordRecoveryReducer","CheckEmail","checkContainer","icon","PasswordRecovery","recovPass","recoveryContainer","marginTop","sendTokenTC","goLogin","LOGIN","Profile","isAuthError","useEffect","name","created","updated","publicCardPacksCount","setIsInitializedAC","registrationReducer","Registration","reg","regContainer","control","cancelBtn","registerTC","TestPage","packsApi","min","max","page","pageCount","packName","sortPacks","user_id","get","params","cardsPack","id","put","cardsPack_id","cardQuestion","sortCards","question","answer","card","card_id","grade","cardPacks","cardPacksTotalCount","minCardsCount","maxCardsCount","undefined","setUserIdforPacksAC","setAppErrorPacksAC","packsTC","getState","packs","packsReducer","n","sortValue","cards","cardsTotalCount","maxGrade","minGrade","packUserId","cardsTC","cardsReducer","userId","useStyles","makeStyles","root","marginLeft","marginRight","RangeSlider","props","classes","React","values","setValue","Typography","gutterBottom","Slider","target","setRangeCardsAC","valueLabelDisplay","aria-labelledby","Search","inputCallback","btnCallback","DeleteItem","open","setOpen","handleClickOpen","handleClose","Button","size","variant","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","callback","autoFocus","UpdateItem","setTitle","handleClickUPD","margin","fullWidth","Pack","userID","packsBodyContainer","packsChild2","cardsCount","packsUpdateTC","Paginator","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onChangeHandler","filter","p","map","currentPage","selected","paginat","onPageChanged","random","SortButton","sortCallback","AddedItem","title2","setTitle2","Packs","isOwner","sortingPack","sortPackAC","setSearchValuePackAC","packsHeaderContainer","packsChild","namePack","m","setPageOfPacksAC","Number","Cards","packId","cardsPackID","sortingCard","sortCardAC","setSearchValueCardAC","cardsAdd","cardsUpdateTC","newPage","setPageOfCardsAC","grades","getCard","sum","reduce","acc","rand","newSum","console","log","LearnPage","isChecked","setIsChecked","first","setFirst","shots","setCard","length","g","setGradeAC","updatedGrade","setGradeTC","NEW_PASS","PROFILE","TEST_PAGE","CARDS_PAGE","PACKS_PAGE","LEARN_PAGE","Routes","path","exact","render","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","profileReducer","rootReducer","combineReducers","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fb0975f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './Page404.module.css'\r\nexport function Page404() {\r\n    return (\r\n\r\n        <div className={s.container}>\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\"\r\n    //baseURL: \"http://localhost:7542/2.0\"\r\n})\r\n\r\n//api\r\n\r\n\r\nexport const authApi = {\r\n\r\n    me() {\r\n        return instance.post<ResponseLoginType>(\"/auth/me\", {})\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ResponseLoginType>(\"/auth/login\", {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(\"/auth/me\")\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseRegisterType>(\"/auth/register\", {email, password})\r\n    },\r\n    forgot(email: string, from: string, message: string) {\r\n        return instance.post<ResponseForgotType>(\"/auth/forgot\", {email, from, message})\r\n    },\r\n    newPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post(\"/auth/set-new-password\", {password, resetPasswordToken})\r\n    }\r\n}\r\n\r\n//types\r\n\r\n\r\nexport type ResponseLoginType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type ResponseRegisterType = {\r\n    addedUser: any,\r\n    error?: string\r\n}\r\n\r\nexport type ResponseForgotType = {\r\n    answer: boolean,\r\n    html: boolean,\r\n    info: string,\r\n    success: boolean,\r\n    error?: string\r\n}\r\n","import React from 'react'\r\n\r\nlet initialState = {\r\n    status: \"idle\"\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialAuthType = typeof initialState;\r\nexport type AppStatusActionType = LogAppStatusACType;\r\n\r\nconst appReducer = (state: InitialAuthType = initialState, action: AppStatusActionType): InitialAuthType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return { ...state, status: action.status }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//Action creators\r\ntype LogAppStatusACType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({\r\n    type: 'APP/SET-STATUS',\r\n    status\r\n} as const)\r\n\r\nexport default appReducer;","import React from 'react'\r\nimport {Dispatch} from 'redux';\r\nimport {authApi, ResponseLoginType} from '../api/fridayProject-api';\r\nimport { AppStatusActionType, setAppStatusAC } from './app-reducer';\r\n\r\nlet initialState = {\r\n    userData: {} as ResponseLoginType,\r\n    isAuth: \"\" as string,\r\n    status: \"idle\",\r\n    error: \"\" as string | null,\r\n}\r\n\r\n\r\nexport type InitialAuthType = typeof initialState;\r\nexport type LoginActionType = SetUserDataACType | SetErrorACType | IsLoggedInACType | AppStatusActionType\r\n\r\nconst loginReducer = (state: InitialAuthType = initialState, action: LoginActionType):InitialAuthType => {\r\n    switch (action.type) {\r\n        case 'LOGIN/SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                userData: action.profileData,\r\n            }\r\n        case 'LOGIN/SET-ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case 'LOGIN/IS-LOGGED-IN':\r\n            return {\r\n                ...state,\r\n                isAuth: action._id\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//Action creators\r\ntype SetUserDataACType = ReturnType<typeof getUserDataAC>\r\ntype SetErrorACType = ReturnType<typeof setErrorAC>\r\ntype IsLoggedInACType = ReturnType<typeof isLoggedInAC>\r\n\r\nexport const getUserDataAC = (profileData: ResponseLoginType) => ({\r\n    type: 'LOGIN/SET-USER-DATA',\r\n    profileData,\r\n} as const)\r\n\r\nexport const setErrorAC = (error: string | null) => ({\r\n    type: 'LOGIN/SET-ERROR',\r\n    error\r\n} as const)\r\n\r\nexport const isLoggedInAC = (_id: string) => ({\r\n    type: 'LOGIN/IS-LOGGED-IN',\r\n    _id\r\n} as const)\r\n\r\n//Thunk creators\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.login(email, password, rememberMe)\r\n        .then(\r\n            res => {\r\n                dispatch(getUserDataAC(res.data))\r\n                dispatch(isLoggedInAC(res.data._id))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            }\r\n        )\r\n        .catch(err => {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.logout()\r\n        .then(res => {\r\n            dispatch(isLoggedInAC(\"\"))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(err.response.data.error))\r\n        dispatch(setAppStatusAC(\"failed\"))\r\n    })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const authTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.me()\r\n        .then(res => {\r\n            dispatch(getUserDataAC(res.data))\r\n            dispatch(isLoggedInAC(res.data._id))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n\r\n        }).catch(err => {\r\n        dispatch(setErrorAC(err.response.data.error))\r\n        dispatch(setAppStatusAC(\"failed\"))\r\n    })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\nexport default loginReducer;","import { TextField } from '@material-ui/core'\r\nimport React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: boolean\r\n    errorMessage?: string | null\r\n    spanClassName?: string\r\n    isType: string\r\n\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        errorMessage,\r\n        isType,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        //onChange  && onChange(e)// если есть пропс onChange\r\n        //onChange && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value.trim())\r\n        //onChangeText &&  onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n            && e.key === 'Enter' // и если нажата кнопка Enter\r\n            && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    //const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                //@ts-ignore\r\n                color=\"primary\"\r\n                error={error}\r\n                label={isType}F\r\n                type={isType}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={s.superInput}\r\n                {...restProps}// отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import { Checkbox } from '@material-ui/core'\r\nimport React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n    // if (onChangeChecked) {onChangeChecked(e.currentTarget.checked)}\r\n    // if (onChange) {onChange(e)}\r\n    // onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    // onChange && onChange(e)}\r\n    // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <Checkbox\r\n            //@ts-ignore\r\n                color={\"primary\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","export default __webpack_public_path__ + \"static/media/Circles-menu.20a21d3c.gif\";","import React from \"react\";\r\nimport preloader from \"./Circles-menu.gif\"\r\n\r\n\r\nconst Preloader = () => {\r\n     return <div><img alt={\"preloader\"} src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginTC } from '../../Redux/login-reducer';\r\nimport { AppStateType } from '../../Redux/store';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport s from './Loginization.module.css'\r\nimport SuperCheckbox from '../../SuperComponents/c3-SuperCheckbox/SuperCheckbox';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport { PATH } from '../../Routes';\r\n\r\nexport function Loginization() {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const status = useSelector<AppStateType, string>((state) => state.app.status)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.loginPage.error)\r\n\r\n    const onCLickHandler = () => {\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n    const checkboxChange = () => {\r\n        setRememberMe(!rememberMe)\r\n    }\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.loginContainer}>\r\n            \r\n                <h2 className={s.title}>It-incubator</h2>\r\n                <p className={s.subTitle}>Sign In</p>\r\n                {status !== 'idle' ? <Preloader /> : null}\r\n                <div className={s.info}>\r\n                    <p>Use common test account credentials:</p>\r\n                    <p>Email: <span className={s.bold}>pavlik.gerasim@yandex.by</span> </p>\r\n                    <p>Password: <span className={s.bold}> 123456789</span></p>\r\n                </div>\r\n                {error && <div className={s.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div className={s.inputs}>\r\n                    <SuperInputText value={email} onChangeText={setEmail} placeholder=\"email\" isType=\"email\" error={error ? true : false} errorMessage={error} />\r\n                    <SuperInputText value={password} onChangeText={setPassword} placeholder=\"password\" isType=\"password\" error={error ? true : false} errorMessage={error} />\r\n                </div>\r\n\r\n                <span className={s.remember}><SuperCheckbox checked={rememberMe} onChange={checkboxChange} /> Remember Me</span>\r\n                <div className={s.forgot}> <NavLink to={PATH.RECOVERY_PASS}> Forgot Password?</NavLink></div>\r\n                <div><SuperButton onClick={onCLickHandler} style={{width:\"266px\"}}>Login</SuperButton></div>\r\n                <div className={s.regBlock}>\r\n                    <p className={s.info}>Don’t have an account?</p>\r\n                    <div> <NavLink to={PATH.REGISTRATION}> Sign Up</NavLink></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Dispatch } from \"redux\";\r\nimport { authApi } from \"../api/fridayProject-api\";\r\nimport { AppStatusActionType, setAppStatusAC } from './app-reducer';\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nexport type InitialStateType = {\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\nconst newPasswordReducer = (state = initialState, action: ActionsType) => {\r\n\r\n    switch (action.type) {\r\n        case \"NEW_PASS/SET-ERROR\":\r\n            return { ...state, error: action.error }\r\n        case \"NEW_PASS/SET-IS-INITIALIZED\":\r\n            return { ...state, isInitialized: action.isInitialized }\r\n        default: return { ...state };\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({ type: 'NEW_PASS/SET-ERROR', error } as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({\r\n    type: 'NEW_PASS/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\n\r\nexport const newPassTC = (password: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.newPassword(password, token)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\n\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setIsInitializedActionType | AppStatusActionType\r\n\r\n\r\nexport default newPasswordReducer;","import React, { useState } from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newPassTC } from \"../../Redux/new-password-reducer\";\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport { AppStateType } from \"../../Redux/store\";\r\nimport { setAppErrorAC } from \"../../Redux/new-password-reducer\";\r\nimport style from \"../Registration/Registration.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport s from './NewPassword.module.css'\r\n\r\nexport function NewPassword() {\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [passwordConf, setPasswordConf] = useState<string>(\"\")\r\n    const dispatch = useDispatch()\r\n    const { token } = useParams<{ token: string }>()\r\n\r\n    const status = useSelector<AppStateType, string>((state) => state.app.status)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.newPassPage.error)\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.newPassPage.isInitialized)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n\r\n    // if (isAuth) {\r\n    //     return <Redirect to='/profile'/>\r\n    // }\r\n    if (isInitialized) {\r\n        return <Redirect to='/login' />\r\n    }\r\n    const buttonCallback = () => {\r\n        if (password === passwordConf) {\r\n            dispatch(newPassTC(password, token))\r\n        } else {\r\n            dispatch(setAppErrorAC(\"Password mismatch\"))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.newPassContainer}>\r\n                <h2 className={s.title}>It-incubator</h2>\r\n                <p className={s.subTitle}>Create new password</p>\r\n                {status !== 'idle' ? <Preloader /> : null}\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div className={s.inputs}>\r\n                    <SuperInputText value={password} onChangeText={setPassword} isType=\"password\" error={error ? true : false} errorMessage={error}/>\r\n                    <SuperInputText value={passwordConf} onChangeText={setPasswordConf} isType=\"repeate password\" error={error ? true : false} errorMessage={error}/>\r\n                </div>\r\n                <div className={s.info}>\r\n                    <p>Create new password and we will send you further instructions to email</p>\r\n                </div>\r\n                <div>\r\n                    <SuperButton style={{ width: \"266px\"}} disabled={status !== \"idle\"} onClick={buttonCallback}>Create new password</SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Dispatch } from \"redux\";\r\nimport { authApi } from \"../api/fridayProject-api\";\r\nimport { AppStatusActionType, setAppStatusAC } from './app-reducer';\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    isInitialized: false\r\n}\r\nexport type InitialStateType = {\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nconst from = \"test-front-admin<ai73a@yandex.by>\"\r\nconst message = `<div style=\"background-color: lime; padding: 15px\"> \r\npassword recovery link(bla bla): \r\n<a href='http://sozdatel31.github.io/FridayIgnatProject#/newPassword/$token$'>\r\nlink</a></div>`\r\n\r\nconst PasswordRecoveryReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"FORGOT/SET-ERROR\":\r\n            return { ...state, error: action.error }\r\n        case \"FORGOT/SET-IS-INITIALIZED\":\r\n            return { ...state, isInitialized: action.isInitialized }\r\n        default: return { ...state };\r\n    }\r\n\r\n}\r\nexport const setAppErrorAC = (error: string | null) => ({ type: 'FORGOT/SET-ERROR', error } as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({\r\n    type: 'FORGOT/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\nexport const sendTokenTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.forgot(email, from, message)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setIsInitializedActionType | AppStatusActionType\r\n\r\n\r\nexport default PasswordRecoveryReducer;","export default __webpack_public_path__ + \"static/media/iconemail.c6176a0a.png\";","import React from 'react';\r\nimport s from './CheckEmail.module.css'\r\nimport icon from './iconemail.png'\r\nexport function CheckEmail() {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.checkContainer}>\r\n                <h2 className={s.title}>It-incubator</h2>\r\n                <div className={s.icon}>  <img src={icon} alt=\"aa\" /></div>\r\n\r\n                <p className={s.subTitle}>Check Email</p>\r\n                <div className={s.info}>\r\n                    <p>We’ve sent an Email with instructions to example@mail.com</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendTokenTC } from \"../../Redux/password-recovery-reducer\";\r\nimport style from \"../Registration/Registration.module.css\";\r\nimport { AppStateType } from \"../../Redux/store\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport s from './PasswordRecovery.module.css'\r\nimport { PATH } from '../../Routes';\r\nimport { CheckEmail } from './CheckEmail/CheckEmail';\r\n\r\nexport function PasswordRecovery() {\r\n    //useState\r\n    const [email, setEmail] = useState<string>(\"\")\r\n\r\n    //useSelectors\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.recovPass.isInitialized)\r\n    const status = useSelector<AppStateType, string>((state) => state.app.status)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.recovPass.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const buttonCallback = () => {\r\n        dispatch(sendTokenTC(email))\r\n    }\r\n\r\n    if (isInitialized) {\r\n        return <CheckEmail /> \r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.recoveryContainer}>\r\n                <h2 className={s.title}>It-incubator</h2>\r\n                <p className={s.subTitle}>Forgot your password?</p>\r\n                {status !== 'idle' ? <Preloader /> : null}\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <SuperInputText value={email} onChangeText={setEmail} isType=\"email\" error={error ? true : false} errorMessage={error}/>\r\n                <div className={s.info}>\r\n                    <p>Enter your email address and we will send you further instructions </p>\r\n                </div>\r\n                <div>\r\n                    <SuperButton style={{ width: \"266px\", marginTop: \"100px\" }} disabled={status !== \"idle\"} onClick={buttonCallback}>SEND</SuperButton>\r\n                </div>\r\n                <div className={s.info}>\r\n                    <p>Did you remember your password?</p>\r\n                </div>\r\n                <div className={s.goLogin}><NavLink to={PATH.LOGIN}>Try logging in</NavLink></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ResponseLoginType } from '../../api/fridayProject-api';\r\nimport { authTC, logoutTC } from '../../Redux/login-reducer';\r\nimport { AppStateType } from '../../Redux/store';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport function Profile() {\r\n\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const isAuthError = useSelector<AppStateType, string | null>(state => state.loginPage.error)\r\n    const data = useSelector<AppStateType, ResponseLoginType>(state => state.loginPage.userData)\r\n\r\n    useEffect(() => {\r\n        if (!isAuth)\r\n            dispatch(authTC())\r\n    }, [])\r\n\r\n    const logout = () => {\r\n        dispatch(logoutTC());\r\n    }\r\n    if (isAuthError) { return <Redirect to={\"/login\"} />; }\r\n\r\n    //при успешной логинизации отрисовываем данные пользователя\r\n    return (\r\n\r\n        <div>\r\n            <h1>Profile</h1>\r\n            <br />\r\n            <h3>Данные пользователя</h3>\r\n            <p>email - {data.email}</p>\r\n            <p>name - {data.name}</p>\r\n            <p>created - {data.created}</p>\r\n            <p>updated - {data.updated}</p>\r\n            <p>count of cards - {data.publicCardPacksCount}</p>\r\n            <br />\r\n            <button onClick={logout}>Log Out</button>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { Dispatch } from 'redux'\r\nimport { authApi } from \"../api/fridayProject-api\";\r\nimport { AppStatusActionType, setAppStatusAC } from './app-reducer';\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nexport type InitialStateType = {\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\n\r\n\r\nconst registrationReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"REG/SET-ERROR\":\r\n            return { ...state, error: action.error }\r\n        case \"REG/SET-IS-INITIALIZED\":\r\n            return { ...state, isInitialized: action.isInitialized }\r\n        default: return { ...state };\r\n    }\r\n}\r\nexport const setAppErrorAC = (error: string | null) => ({ type: 'REG/SET-ERROR', error } as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({ type: 'REG/SET-IS-INITIALIZED', isInitialized } as const)\r\n\r\n\r\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.register(email, password)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setIsInitializedActionType | AppStatusActionType\r\n\r\n\r\nexport default registrationReducer;","import React, { useEffect, useState } from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerTC, setAppErrorAC, setIsInitializedAC } from \"../../Redux/reg-reducer\";\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { AppStateType } from \"../../Redux/store\";\r\nimport style from \"./Registration.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport s from './Registration.module.css'\r\nimport { PATH } from '../../Routes';\r\n\r\nexport function Registration() {\r\n    //useState\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [passwordConf, setPasswordConf] = useState<string>(\"\")\r\n    //useSelectors\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.reg.isInitialized)\r\n    const status = useSelector<AppStateType, string>((state) => state.app.status)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.reg.error)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const buttonCallback = () => {\r\n        if (password === passwordConf) {\r\n            dispatch(registerTC(email, password))\r\n        } else {\r\n            dispatch(setAppErrorAC(\"Password mismatch\"))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setIsInitializedAC(false))\r\n        dispatch(setAppErrorAC(null))\r\n    }, [isInitialized])\r\n\r\n    if (isInitialized) {\r\n        return <Redirect to='/login' />\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.regContainer}>\r\n                <h2 className={s.title}>It-incubator</h2>\r\n                <p className={s.subTitle}>Sign In</p>\r\n                {status !== 'idle' ? <Preloader /> : null}\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div className={s.inputs}>\r\n                    <SuperInputText value={email} onChangeText={setEmail} isType=\"email\" error={error ? true : false} errorMessage={error}/>\r\n                    <SuperInputText value={password} onChangeText={setPassword} isType=\"password\" error={error ? true : false} errorMessage={error}/>\r\n                    <SuperInputText value={passwordConf} onChangeText={setPasswordConf} isType=\"confirm password\" error={error ? true : false} errorMessage={error}/>\r\n                </div>\r\n                <div className={s.control}>\r\n                    <NavLink to={PATH.LOGIN}> <SuperButton className={s.cancelBtn} disabled={status !== 'idle'} onClick={()=>{}}>Cancel</SuperButton></NavLink>\r\n\r\n                    <SuperButton style={{ width: \"187px\" }} disabled={status !== 'idle'} onClick={buttonCallback}>Sign Up</SuperButton>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../SuperComponents/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport function TestPage() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>TestPage</h1>\r\n            {/* <SuperInputText/> */}\r\n            <SuperButton>hello!!!!</SuperButton>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    );\r\n}\r\n","import { instance } from \"./fridayProject-api\";\r\nimport { cardsType } from \"../Redux/packs-reducer\";\r\n\r\n\r\n//api\r\n\r\nexport const packsApi = {\r\n\r\n    getPacks(\r\n        min?: number,\r\n        max?: number,\r\n        page?: number,\r\n        pageCount?: number,\r\n        packName?: string,\r\n        sortPacks?: string,\r\n        user_id?: string\r\n    ) {\r\n        return instance.get<responsePacksType>(`/cards/pack`,\r\n            { params: { min, max, page, pageCount, packName, sortPacks, user_id } })\r\n    },\r\n    setPacks(name: string) {\r\n        return instance.post(\"cards/pack\", { cardsPack: { name } })\r\n    },\r\n    deletePacks(id: string) {\r\n        return instance.delete(\"cards/pack\", { params: { id } })\r\n    },\r\n    updatePacks(_id: string, name: string) {\r\n        return instance.put(\"cards/pack\", { cardsPack: { _id, name } })\r\n    },\r\n\r\n    getCards(\r\n        cardsPack_id: string,\r\n        cardQuestion?: string,\r\n        min?: number,\r\n        max?: number,\r\n        sortCards?: string,\r\n        page?: number,\r\n        pageCount?: number\r\n    ) {\r\n        return instance.get<responseCardType>(\"/cards/card\",\r\n            {\r\n                params: {\r\n                    cardsPack_id,\r\n                    cardQuestion,\r\n                    min,\r\n                    max,\r\n                    sortCards,\r\n                    page,\r\n                    pageCount,\r\n                }\r\n            })\r\n    },\r\n    setCards(\r\n        cardsPack_id: string,\r\n        question?: string,\r\n        answer?: string\r\n    ) {\r\n        return instance.post(\"cards/card\", { card: { cardsPack_id, question, answer } })\r\n    },\r\n    deleteCards(id: string) {\r\n        return instance.delete(\"cards/card\", { params: { id } })\r\n    },\r\n    updateCards(_id: string, question?: string) {\r\n        return instance.put(\"cards/card\", { card: { _id, question } })\r\n    },\r\n    setGradeCards(card_id: string, grade: number) {\r\n        return instance.put(\"cards/grade\", { card_id, grade })\r\n    }\r\n\r\n}\r\n\r\n//types\r\nexport type responseCardType = {\r\n    cards: Array<ArrCardType>\r\n    cardsTotalCount: number,\r\n    maxGrade: number,\r\n    minGrade: number,\r\n    page: number,\r\n    pageCount: number,\r\n    packUserId: string,\r\n    error?: string,\r\n    isInitialized: boolean\r\n    sortCards: string\r\n    cardQuestion: string,\r\n    grade?: number\r\n}\r\nexport type ArrCardType = {\r\n    answer: string,\r\n    question: string,\r\n    cardsPack_id: string,\r\n    grade: number,\r\n    shots: number,\r\n    user_id: string,\r\n    created: string,\r\n    updated: string,\r\n    _id: string\r\n}\r\n\r\nexport type getCardParams = {\r\n    cardAnswer?: string,\r\n    cardQuestion?: string,\r\n    cardsPack_id: string,\r\n    min?: number,\r\n    max?: number,\r\n    sortCards?: string,\r\n    page?: number,\r\n    pageCount?: number\r\n}\r\n\r\nexport type responsegGradeType = {\r\n\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}\r\n\r\n// type setCardParams = {\r\n//     cardsPack_id: string,\r\n//     question?: string,\r\n//     answer?: string,\r\n//     grade?: number\r\n//     shots?: number,\r\n//     answerlmg?: string,\r\n//     questionImg?: string,\r\n//     questionVideo?:string,\r\n//     answerVideo?: string\r\n// }\r\n\r\nexport type responsePacksType = {\r\n    cardPacks: Array<cardsType>,\r\n    cardPacksTotalCount: number,\r\n    minCardsCount: number,\r\n    maxCardsCount: number,\r\n    max?: number,\r\n    min: number,\r\n    page: number,\r\n    pageCount: number,\r\n    error?: string,\r\n    isInitialized: boolean,\r\n    sortPacks: string,\r\n    packName: string\r\n    user_id: string\r\n}\r\n\r\nexport type cardType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n    url: string\r\n}","import { Dispatch } from 'redux'\r\nimport { packsApi, responsePacksType } from \"../api/packs-api\";\r\nimport { AppStatusActionType, setAppStatusAC } from './app-reducer';\r\nimport { AppStateType } from './store';\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 10,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 4,\r\n    max: undefined,\r\n    min: 0,\r\n    page: 1,\r\n    pageCount: 4,\r\n    error: undefined,\r\n    isInitialized: false,\r\n    sortPacks: \"1update\",\r\n    packName: \"\",\r\n    user_id: \"\"\r\n}\r\ntype initialStateType = responsePacksType\r\n\r\nexport type cardsType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n    url: string\r\n}\r\n\r\n\r\n\r\nconst packsReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"PACKS/GET-PACKS\":\r\n            return {\r\n                ...state,\r\n                cardPacks: action.packs.cardPacks,\r\n                cardPacksTotalCount: action.packs.cardPacksTotalCount,\r\n                minCardsCount: action.packs.minCardsCount,\r\n                maxCardsCount: action.packs.maxCardsCount,\r\n                page: action.packs.page,\r\n                pageCount: action.packs.pageCount,\r\n            }\r\n        case \"PACKS/SET-ERROR\":\r\n            return { ...state, error: action.error }\r\n        case \"PACKS/SET-IS-INITIALIZED\":\r\n            return { ...state, isInitialized: action.isInitialized }\r\n        case 'PACKS/SET-SEARCH-VALUE':\r\n            return { ...state, packName: action.value }\r\n        case 'PACKS/SORT':\r\n            return { ...state, sortPacks: `${action.n}${action.sortValue}` }\r\n        case 'PACKS/SET-RANGE':\r\n            return { ...state, min: action.min, max: action.max }\r\n        case 'PACKS/SET-PAGE':\r\n            return { ...state, page: action.page }\r\n        case 'PACKS/SET-PAGECOUNT':\r\n            return { ...state, pageCount: action.value }\r\n        case 'PACKS/SET-USERID-FOR-PACKS':\r\n            return { ...state, user_id: action.value }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const setUserIdforPacksAC = (value: string) => ({ type: 'PACKS/SET-USERID-FOR-PACKS', value } as const)\r\nexport const setPageCountOfPacksAC = (value: number) => ({ type: 'PACKS/SET-PAGECOUNT', value } as const)\r\nexport const setPageOfPacksAC = (page: number) => ({ type: 'PACKS/SET-PAGE', page } as const)\r\nexport const setRangePacksAC = (min: number, max: number) => ({ type: 'PACKS/SET-RANGE', min, max } as const)\r\nexport const sortPackAC = (n: 1 | 0, sortValue: string) => ({ type: 'PACKS/SORT', n, sortValue } as const)\r\nexport const getPacksAC = (packs: initialStateType) => ({ type: 'PACKS/GET-PACKS', packs } as const)\r\nexport const setAppErrorPacksAC = (error: string | undefined) => ({ type: 'PACKS/SET-ERROR', error } as const)\r\nexport const setIsInitializedPackAC = (isInitialized: boolean) => ({\r\n    type: 'PACKS/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\nexport const setSearchValuePackAC = (value: string) => ({ type: 'PACKS/SET-SEARCH-VALUE', value })\r\n\r\nexport const packsTC = () => (dispatch: Dispatch<any>, getState: () => AppStateType) => {\r\n    let state = getState().packs;\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    packsApi.getPacks(state.min, state.max, state.page, state.pageCount, state.packName, state.sortPacks, state.user_id)\r\n        .then((response) => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(getPacksAC(response.data))\r\n            dispatch(setIsInitializedPackAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const packsAddTC = (namePack: string) => (dispatch: Dispatch<any>) => {\r\n\r\n    packsApi.setPacks(namePack)\r\n        .then(() => {\r\n            dispatch(packsTC())\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport const packsDeleteTC = (id: string) => (dispatch: Dispatch<any>) => {\r\n    packsApi.deletePacks(id)\r\n        .then(() => {\r\n            dispatch(packsTC())\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport const packsUpdateTC = (_id: string, name: string) => (dispatch: Dispatch<any>) => {\r\n\r\n    packsApi.updatePacks(_id, name)\r\n        .then(() => {\r\n            dispatch(packsTC())\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport type setUserIdforPacksACType = ReturnType<typeof setUserIdforPacksAC>\r\nexport type setPageCountOfPacksACType = ReturnType<typeof setPageCountOfPacksAC>\r\nexport type setPageOfPacksACType = ReturnType<typeof setPageOfPacksAC>\r\nexport type setRangePacksACType = ReturnType<typeof setRangePacksAC>;\r\nexport type sortPackACType = ReturnType<typeof sortPackAC>;\r\nexport type getPacksTypeAC = ReturnType<typeof getPacksAC>;\r\nexport type setAppErrorPacksTypeAC = ReturnType<typeof setAppErrorPacksAC>;\r\nexport type setIsInitializedPackTypeAC = ReturnType<typeof setIsInitializedPackAC>;\r\nexport type setSearchValuePackTypeAC = { type: 'PACKS/SET-SEARCH-VALUE', value: string }\r\ntype ActionType = getPacksTypeAC\r\n    | setAppErrorPacksTypeAC\r\n    | setIsInitializedPackTypeAC\r\n    | setSearchValuePackTypeAC\r\n    | sortPackACType\r\n    | setRangePacksACType\r\n    | setPageOfPacksACType\r\n    | setPageCountOfPacksACType\r\n    | setUserIdforPacksACType\r\n    | AppStatusActionType\r\nexport default packsReducer;","import { Dispatch } from 'redux'\r\nimport { packsApi, responseCardType } from \"../api/packs-api\";\r\nimport { AppStatusActionType, setAppStatusAC } from './app-reducer';\r\n\r\nimport { AppStateType } from './store';\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    cards: [],\r\n    cardsTotalCount: 3,\r\n    maxGrade: 5,\r\n    minGrade: 0,\r\n    page: 1,\r\n    pageCount: 4,\r\n    packUserId: \"\" as string,\r\n\r\n    grade: 2 as number,\r\n    error: undefined,\r\n    isInitialized: true,\r\n    sortCards: \"1update\",\r\n    cardQuestion: \"\"\r\n}\r\ntype initialStateType = responseCardType\r\n\r\n\r\nconst cardsReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"CARDS/GET_CARDS\":\r\n            return {\r\n                ...state,\r\n                cards: action.cards.cards,\r\n                cardsTotalCount: action.cards.cardsTotalCount,\r\n                maxGrade: action.cards.maxGrade,\r\n                minGrade: action.cards.minGrade,\r\n                page: action.cards.page,\r\n                pageCount: action.cards.pageCount,\r\n                packUserId: action.cards.packUserId\r\n            }\r\n        case \"CARDS/SET-ERROR\":\r\n            return { ...state, error: action.error }\r\n        case \"CARDS/SET-IS-INITIALIZED\":\r\n            return { ...state, isInitialized: action.isInitialized }\r\n        case 'CARDS/SET-SEARCH-VALUE':\r\n            return { ...state, cardQuestion: action.value }\r\n        case 'CARDS/SORT':\r\n            return { ...state, sortCards: `${action.n}${action.sortValue}` }\r\n        case 'CARDS/SET-RANGE':\r\n            return { ...state, minGrade: action.min, maxGrade: action.max }\r\n        case 'CARDS/SET-PAGE':\r\n            return { ...state, page: action.page }\r\n        case 'CARDS/SET-PAGECOUNT':\r\n            return { ...state, pageCount: action.value }\r\n        case 'CARDS/SET-ID':\r\n            return { ...state, packUserId: action.userId }\r\n        case 'CARDS/SET-GRADE':\r\n            return { ...state, grade: action.grade }\r\n        default: return state\r\n    }\r\n\r\n}\r\nexport const setGradeAC = (grade: number) => ({ type: 'CARDS/SET-GRADE', grade } as const)\r\nexport const setPackUserIdAC = (userId: string) => ({ type: 'CARDS/SET-ID', userId } as const)\r\nexport const setPageCountOfCardsAC = (value: number) => ({ type: 'CARDS/SET-PAGECOUNT', value } as const)\r\nexport const setPageOfCardsAC = (page: number) => ({ type: 'CARDS/SET-PAGE', page } as const)\r\nexport const setRangeCardsAC = (min: number, max: number) => ({ type: 'CARDS/SET-RANGE', min, max } as const)\r\nexport const sortCardAC = (n: 1 | 0, sortValue: string) => ({ type: 'CARDS/SORT', n, sortValue } as const)\r\nexport const setSearchValueCardAC = (value: string) => ({ type: 'CARDS/SET-SEARCH-VALUE', value } as const)\r\nexport const getCardAC = (cards: initialStateType) => ({ type: 'CARDS/GET_CARDS', cards } as const)\r\nexport const setAppErrorPacksAC = (error: string | undefined) => ({ type: 'CARDS/SET-ERROR', error } as const)\r\nexport const setIsInitializedPackAC = (isInitialized: boolean) => ({\r\n    type: 'CARDS/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\nexport const cardsTC = (cardsPack_id: string) => (dispatch: Dispatch<any>, getState: () => AppStateType) => {\r\n    let state = getState().cards;\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    packsApi.getCards(cardsPack_id, state.cardQuestion, state.minGrade, state.maxGrade, state.sortCards, state.page, state.pageCount,)\r\n\r\n        .then((response) => {\r\n            dispatch(getCardAC(response.data))\r\n            dispatch(setIsInitializedPackAC(true))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const cardsAdd = (cardsPack_id: string, question?: string, answer?: string) => (dispatch: Dispatch<any>) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    packsApi.setCards(cardsPack_id, question, answer)\r\n        .then(() => {\r\n            dispatch(cardsTC(cardsPack_id))\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n        })\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n}\r\n\r\nexport const cardsDeleteTC = (id: string, cardsPack_id: string) => (dispatch: Dispatch<any>) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    packsApi.deleteCards(id)\r\n        .then(() => {\r\n            dispatch(cardsTC(cardsPack_id))\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n        })\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n}\r\n\r\nexport const cardsUpdateTC = (id: string, cardsPack_id: string, question?: string) => (dispatch: Dispatch<any>) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    packsApi.updateCards(id, question)\r\n        .then(() => {\r\n            dispatch(cardsTC(cardsPack_id))\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n        })\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n}\r\n\r\nexport const setGradeTC = (id: string, grade: number) => (dispatch: Dispatch<any>) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    packsApi.setGradeCards(id, grade)\r\n        .then((res) => {\r\n            dispatch(setGradeAC(res.data.updatedGrade.grade))\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n        })\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n}\r\n\r\n\r\nexport type setGradeACType = ReturnType<typeof setGradeAC>\r\nexport type setPackUserIdACType = ReturnType<typeof setPackUserIdAC>\r\nexport type setPageCountOfCardsACType = ReturnType<typeof setPageCountOfCardsAC>\r\nexport type setPageOfCardsACType = ReturnType<typeof setPageOfCardsAC>\r\nexport type setRangeCardsACType = ReturnType<typeof setRangeCardsAC>;\r\nexport type sortCardACType = ReturnType<typeof sortCardAC>;\r\nexport type setSearchValueCardTypeAC = ReturnType<typeof setSearchValueCardAC>;\r\nexport type getCardsTypeAC = ReturnType<typeof getCardAC>;\r\nexport type setAppErrorPacksTypeAC = ReturnType<typeof setAppErrorPacksAC>;\r\nexport type setIsInitializedPackTypeAC = ReturnType<typeof setIsInitializedPackAC>;\r\n\r\ntype ActionType = getCardsTypeAC\r\n    | setAppErrorPacksTypeAC\r\n    | setIsInitializedPackTypeAC\r\n    | setSearchValueCardTypeAC\r\n    | sortCardACType\r\n    | setRangeCardsACType\r\n    | setPageOfCardsACType\r\n    | setPageCountOfCardsACType\r\n    | setPackUserIdACType\r\n    | setGradeACType\r\n    | AppStatusActionType\r\nexport default cardsReducer;","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setRangeCardsAC } from '../../../Redux/cards-reducer';\r\nimport { setRangePacksAC } from '../../../Redux/packs-reducer';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 600,\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n  },\r\n});\r\n\r\ntype PropsRangeType = {\r\n  min: number\r\n  max: number\r\n  target: \"packs\" | \"cards\"\r\n}\r\nexport default function RangeSlider(props: PropsRangeType) {\r\n  const dispatch = useDispatch()\r\n\r\n  const classes = useStyles();\r\n  const [values, setValue] = React.useState<number[]>([props.min, props.max]);\r\n\r\n  const handleChange = (e: any, values: number | number[]) => {\r\n    if (props.target === \"packs\") {\r\n      //@ts-ignore   //!<<<<---------------\r\n      dispatch(setRangePacksAC(values[0], values[1]));\r\n      setValue(values as number[]);\r\n    } else {\r\n      //@ts-ignore   //!<<<<---------------\r\n      dispatch(setRangeCardsAC(values[0], values[1]));\r\n      setValue(values as number[]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"range-slider\" gutterBottom>\r\n        Range\r\n      </Typography>\r\n      <Slider\r\n        value={values}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport s from './Search.module.css'\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport RangeSlider from './Range/RangeSlider'\r\n\r\ntype PropsType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n    target: \"packs\" | \"cards\"\r\n    inputCallback: (value: string) => void\r\n    btnCallback: () => void\r\n\r\n}\r\nexport const Search: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            Search:\r\n            <SuperInputText value={props.packName} onChangeText={props.inputCallback} isType=\"text\"/>\r\n            <RangeSlider min={props.min} max={props.max} target={props.target} />\r\n            <SuperButton onClick={props.btnCallback}>Search</SuperButton>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype DeleteModalType = {\r\n    disabled: boolean,\r\n    callback: () => void\r\n}\r\n\r\nexport function DeleteItem(props: DeleteModalType) {\r\n    let [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const buttonCallback = () => {\r\n        props.callback()\r\n        setOpen(false)\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.disabled ?\r\n                <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} disabled>\r\n                    Del\r\n                </Button> : <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Del\r\n                </Button>}\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you serious?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Quit\r\n                    </Button>\r\n                    <Button onClick={buttonCallback} color=\"primary\" autoFocus>\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype UpdateItemPT = {\r\n    callback: (title: string, title2?: string) => void\r\n    value: string\r\n    // value2?: string\r\n    disabled: boolean\r\n}\r\n\r\nexport function UpdateItem(props: UpdateItemPT) {\r\n    const [open, setOpen] = React.useState(false);\r\n    let [title, setTitle] = React.useState(props.value);\r\n    // let [title2, setTitle2] = React.useState(props.value2);\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    // const changeTitle2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     setTitle2(e.currentTarget.value)\r\n    // }\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClickUPD = () => {\r\n        props.callback(title)\r\n        setOpen(false)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.disabled ?\r\n                <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} disabled>\r\n                    Update\r\n                </Button> : <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Update\r\n                </Button>}\r\n            <Dialog open={open} onClose={handleClickUPD} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update pls</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <TextField\r\n                        value={title}\r\n                        onChange={changeTitle}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        fullWidth\r\n                    />\r\n                    {/*{props.value2 && <TextField*/}\r\n                    {/*    value={title2}*/}\r\n                    {/*    onChange={changeTitle2}*/}\r\n                    {/*    autoFocus*/}\r\n                    {/*    margin=\"dense\"*/}\r\n                    {/*    id=\"name2\"*/}\r\n                    {/*    fullWidth*/}\r\n                    {/*/>}*/}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClickUPD} color=\"primary\">\r\n                        Update\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    cardsType,\r\n    packsDeleteTC,\r\n    packsUpdateTC,\r\n} from \"../../../Redux/packs-reducer\";\r\nimport {AppStateType} from '../../../Redux/store';\r\nimport s from \"./Pack.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DeleteItem} from \"../../../Modal/DeleteModal\";\r\nimport {UpdateItem} from \"../../../Modal/UpdateModal\";\r\n\r\ntype PropsType = {\r\n    card: cardsType\r\n}\r\n\r\nexport function Pack(props: PropsType) {\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteCallback = () => {\r\n        dispatch(packsDeleteTC(props.card._id))\r\n    }\r\n    const updateCallback = (name: string) => {\r\n        dispatch(packsUpdateTC(props.card._id, name))\r\n    }\r\n\r\n    const userID = useSelector<AppStateType, string>(state => state.loginPage.userData._id)\r\n\r\n    return <div className={s.packsBodyContainer} key={props.card._id}>\r\n        <div className={s.packsChild2}>{props.card.name}</div>\r\n        <div className={s.packsChild2}>{props.card.cardsCount}</div>\r\n        <div className={s.packsChild2}>{props.card.updated}</div>\r\n        <div className={s.packsChild2}>{props.card.created}</div>\r\n        <div className={s.packsChild2}>\r\n            <DeleteItem callback={deleteCallback} disabled={userID !== props.card.user_id}/>\r\n            <UpdateItem value={props.card.name} callback={updateCallback} disabled={userID !== props.card.user_id}/>\r\n\r\n            <NavLink to={`cards/${props.card._id}`}> cards </NavLink>\r\n            <NavLink to={`learn/${props.card._id}`}> Learn </NavLink>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}","import { ChangeEvent, useState } from 'react';\r\nimport s from './Paginator.module.css'\r\n\r\ntype PaginatorType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    pageCount: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    onChangeHandler: (e: ChangeEvent<HTMLSelectElement>) => void\r\n}\r\n\r\nexport function Paginator(props: PaginatorType) {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionSize = 5;\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (<div className={s.container}>\r\n        <select value={props.pageCount} onChange={(e) => props.onChangeHandler(e)} >\r\n            <option value={4}>4</option>\r\n            <option value={7}>7</option>\r\n            <option value={10}>10</option>\r\n            <option value={20}>20</option>\r\n            <option value={50}>50</option>\r\n        </select>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\r\n            return <span key={Math.random()}\r\n                className={props.currentPage === p ? s.selected : s.paginat}\r\n                onClick={() => props.onPageChanged(p)}\r\n            >{p}</span>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n\r\n    </div>)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './SortButton.module.css'\r\n\r\ntype PropsSortType = {\r\n    sortValue: string\r\n    sortPacks: string\r\n    sortCallback: (n: 1 | 0, sortValue: string) => void\r\n}\r\n\r\nexport const SortButton: React.FC<PropsSortType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <button onClick={() => props.sortCallback(1,  props.sortValue)}>&#5123;</button>\r\n            <button onClick={() => props.sortCallback(0,  props.sortValue)}>&#5121;</button>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype AddItemPT = {\r\n    callback: (title: string, title2?: string) => void\r\n    disabled?: boolean\r\n    id?: number\r\n}\r\n\r\nexport function AddedItem(props: AddItemPT) {\r\n    const [open, setOpen] = React.useState(false);\r\n    let [title, setTitle] = React.useState(\"\");\r\n    let [title2, setTitle2] = React.useState(\"\");\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    const changeTitle2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle2(e.currentTarget.value)\r\n    }\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClickUPD = () => {\r\n        props.callback(title, title2)\r\n        setOpen(false)\r\n        setTitle(\"\")\r\n        setTitle2(\"\")\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.disabled ?\r\n                <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} disabled>\r\n                    Add\r\n                </Button> : <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Add\r\n                </Button>}\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">add</DialogTitle>\r\n                <DialogContent>\r\n                    {props.id? \"Question\" : \"PackName\"}\r\n                    <TextField\r\n                        value={title}\r\n                        onChange={changeTitle}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                {props.id && <DialogContent>\r\n                    Answer\r\n                    < TextField\r\n                        value={title2}\r\n                        onChange={changeTitle2}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name2\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>}\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClickUPD} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { ChangeEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    sortPackAC,\r\n    packsAddTC,\r\n    packsTC,\r\n    setSearchValuePackAC,\r\n    setPageOfPacksAC,\r\n    setPageCountOfPacksAC,\r\n    setUserIdforPacksAC,\r\n} from \"../../Redux/packs-reducer\";\r\nimport s from \"./Packs.module.css\"\r\nimport { AppStateType } from \"../../Redux/store\";\r\nimport { Search } from '../../Common/Search/Search';\r\nimport { Pack } from './Pack/Pack';\r\nimport { Paginator } from '../../Common/Paginator/Paginator'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport { SortButton } from '../../Common/SortButton/SortButton';\r\nimport { responsePacksType } from '../../api/packs-api';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AddedItem } from \"../../Modal/AddedModal\";\r\nimport { authTC } from '../../Redux/login-reducer';\r\n\r\nexport function Packs() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const isAuthError = useSelector<AppStateType, string | null>(state => state.loginPage.error)\r\n    const { min, max, page, pageCount, packName, sortPacks, error, cardPacks, cardPacksTotalCount, user_id } = useSelector<AppStateType, responsePacksType>(state => state.packs)\r\n    const status = useSelector<AppStateType, string>((state) => state.app.status)\r\n    const isOwner = useSelector<AppStateType, string>(state => state.loginPage.userData._id)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isAuth)\r\n            dispatch(authTC())\r\n    }, [isAuth])\r\n\r\n\r\n    useEffect(() => {\r\n        if (isAuth)\r\n            dispatch(packsTC())\r\n    }, [isAuth, page, pageCount, sortPacks, user_id])\r\n\r\n    const addedCallback = (name: string) => {\r\n        dispatch(packsAddTC(name))\r\n    }\r\n\r\n    //пагинация\r\n    const onPageChanged = (page: number) => {\r\n        dispatch(setPageOfPacksAC(page))\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(setPageCountOfPacksAC(Number(e.currentTarget.value)))\r\n    }\r\n\r\n    //поисковая строка\r\n    const setSearchResult = (value: string) => {\r\n        dispatch(setSearchValuePackAC(value))\r\n\r\n    }\r\n    const searchPackCallback = () => {\r\n        dispatch(packsTC())\r\n    }\r\n\r\n    //сортировка \r\n    const sortingPack = (n: 1 | 0, sortValue: string) => {\r\n\r\n        dispatch(sortPackAC(n, sortValue))\r\n    }\r\n\r\n    if (isAuthError) { return <Redirect to={\"/login\"} />; }\r\n\r\n    return <div className={s.container}>\r\n        PACKS\r\n        {status !== 'idle' ? <Preloader /> : null}\r\n        <br />\r\n        {!error && <div>{error}</div>}\r\n        <br />\r\n        <Search\r\n            packName={packName}\r\n            min={min}\r\n            max={max? max : 10}\r\n            target=\"packs\"\r\n            inputCallback={setSearchResult}\r\n            btnCallback={searchPackCallback}\r\n\r\n        />\r\n        <br />\r\n\r\n        <button onClick={() => { dispatch(setUserIdforPacksAC(isOwner)) }}>Мои колоды</button>\r\n        <button onClick={() => { dispatch(setUserIdforPacksAC(\"\")) }}>Все колоды</button>\r\n        <hr />\r\n        <div className={s.packsHeaderContainer}>\r\n            <div className={s.packsChild}>Name <SortButton sortValue=\"name\" sortPacks={sortPacks}\r\n                sortCallback={sortingPack} /></div>\r\n            <div className={s.packsChild}>cardsCount<SortButton sortValue=\"cardsCount\" sortPacks={sortPacks}\r\n                sortCallback={sortingPack} /></div>\r\n            <div className={s.packsChild}>updated<SortButton sortValue=\"updated\" sortPacks={sortPacks}\r\n                sortCallback={sortingPack} /></div>\r\n            <div className={s.packsChild}>created<SortButton sortValue=\"created\" sortPacks={sortPacks}\r\n                sortCallback={sortingPack} /></div>\r\n            <div className={s.packsChild}>\r\n\r\n                <AddedItem callback={addedCallback} />\r\n            </div>\r\n        </div>\r\n\r\n        {cardPacks.map(m => {\r\n\r\n            return <Pack card={m} key={m._id} />\r\n\r\n        })}\r\n        <Paginator totalItemsCount={cardPacksTotalCount} pageSize={pageCount} currentPage={page} pageCount={pageCount}\r\n            onPageChanged={onPageChanged} onChangeHandler={onChangeHandler} />\r\n    </div>\r\n\r\n}","import React, {ChangeEvent, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Search} from '../../Common/Search/Search';\r\nimport s from \"./Cards.module.css\"\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport {\r\n    cardsAdd,\r\n    cardsDeleteTC,\r\n    cardsTC,\r\n    cardsUpdateTC,\r\n    setPackUserIdAC,\r\n    setPageCountOfCardsAC,\r\n    setPageOfCardsAC,\r\n    setSearchValueCardAC,\r\n    sortCardAC\r\n} from \"../../Redux/cards-reducer\";\r\nimport {ArrCardType, responseCardType} from \"../../api/packs-api\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {Paginator} from './../../Common/Paginator/Paginator'\r\nimport {SortButton} from '../../Common/SortButton/SortButton';\r\nimport {DeleteItem} from \"../../Modal/DeleteModal\";\r\nimport {UpdateItem} from \"../../Modal/UpdateModal\";\r\nimport {AddedItem} from \"../../Modal/AddedModal\";\r\nimport {authTC} from \"../../Redux/login-reducer\";\r\n\r\nexport function Cards() {\r\n\r\n    const dispatch = useDispatch()\r\n    const {packId} = useParams<{ packId: string }>()\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    //const cardsPackId = useSelector<AppStateType, string>(state => state.cards.packUserId)\r\n    const cards = useSelector<AppStateType, Array<ArrCardType>>(state => state.cards.cards)\r\n    const cardsPackID = useSelector<AppStateType, string>(state => state.cards.packUserId)\r\n    const error = useSelector<AppStateType, string | undefined>(state => state.packs.error)\r\n    const userID = useSelector<AppStateType, string>(state => state.loginPage.userData._id)\r\n    const {cardsTotalCount, page, pageCount, minGrade, maxGrade, sortCards, cardQuestion} = useSelector<AppStateType, responseCardType>(state => state.cards)\r\n\r\n    useEffect(() => {\r\n        if (!isAuth)\r\n            dispatch(authTC())\r\n    }, [isAuth])\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(setPackUserIdAC(packId))\r\n            dispatch(cardsTC(packId))\r\n        }\r\n    }, [isAuth, page, pageCount, sortCards])\r\n\r\n    const addCallback = (question?: string, answer?: string) => {\r\n        dispatch(cardsAdd(packId, question, answer))\r\n    }\r\n\r\n    //пагинация\r\n    const onPageChanged = (newPage: number) => {\r\n        dispatch(setPageOfCardsAC(newPage))\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(setPageCountOfCardsAC(Number(e.currentTarget.value)))\r\n    }\r\n    //поиск\r\n    const setSearchResult = (value: string) => {\r\n        dispatch(setSearchValueCardAC(value))\r\n    }\r\n    const searchCardCallback = () => {\r\n        dispatch(cardsTC(packId))\r\n    }\r\n\r\n    //сортировка \r\n    const sortingCard = (n: 1 | 0, sortValue: string) => {\r\n        dispatch(sortCardAC(n, sortValue))\r\n    }\r\n\r\n    return <div>\r\n        Cards\r\n        {error && <div>{error}</div>}\r\n        <br/>\r\n        <Search\r\n            packName={cardQuestion}\r\n            min={minGrade}\r\n            max={maxGrade}\r\n            target=\"cards\"\r\n            inputCallback={setSearchResult}\r\n            btnCallback={searchCardCallback}\r\n\r\n        />\r\n        <br/>\r\n        <div className={s.packsHeaderContainer}>\r\n            <div className={s.packsChild}>question<SortButton sortValue=\"question\" sortPacks={sortCards}\r\n                                                              sortCallback={sortingCard}/></div>\r\n            <div className={s.packsChild}>answer<SortButton sortValue=\"answer\" sortPacks={sortCards}\r\n                                                            sortCallback={sortingCard}/></div>\r\n            <div className={s.packsChild}>Grade<SortButton sortValue=\"grade\" sortPacks={sortCards}\r\n                                                           sortCallback={sortingCard}/></div>\r\n            <div className={s.packsChild}>updated<SortButton sortValue=\"updated\" sortPacks={sortCards}\r\n                                                             sortCallback={sortingCard}/></div>\r\n            <div className={s.packsChild}>created<SortButton sortValue=\"created\" sortPacks={sortCards}\r\n                                                             sortCallback={sortingCard}/></div>\r\n            <AddedItem disabled={cardsPackID!==userID} callback={addCallback} id={2}/>\r\n            {/*<div className={s.packsChild}>*/}\r\n            {/*    <button onClick={addCallback}>add</button>*/}\r\n\r\n            {/*</div>*/}\r\n        </div>\r\n\r\n        {cards.map(m => {\r\n            const deleteCallback = () => {\r\n                dispatch(cardsDeleteTC(m._id, m.cardsPack_id))\r\n            }\r\n            const updateCallback = (question: string) => {\r\n                dispatch(cardsUpdateTC(m._id, m.cardsPack_id, question))\r\n            }\r\n            return <div className={s.packsBodyContainer} key={Math.random()}>\r\n                <div className={s.packsChild2}>{m.question}</div>\r\n                <div className={s.packsChild2}>{m.answer}</div>\r\n                <div className={s.packsChild2}>{m.grade}</div>\r\n                <div className={s.packsChild2}>{m.updated}</div>\r\n                <div className={s.packsChild2}>{m.created}</div>\r\n                <div className={s.packsChild2}>\r\n                    <DeleteItem disabled={userID !== m.user_id} callback={deleteCallback}/>\r\n                    <UpdateItem callback={updateCallback}\r\n                                value={m.question}\r\n                        // value2 = {m.answer}\r\n                                disabled={userID !== m.user_id}/>\r\n                    {/*<button disabled={userID !== m.user_id}*/}\r\n                    {/*    onClick={updateCallback()}>upd)*/}\r\n                    {/*</button>*/}\r\n                </div>\r\n            </div>\r\n        })}\r\n        <Paginator totalItemsCount={cardsTotalCount} pageSize={pageCount} currentPage={page} pageCount={pageCount}\r\n                   onPageChanged={onPageChanged} onChangeHandler={onChangeHandler}/>\r\n    </div>\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { ArrCardType } from \"../../api/packs-api\";\r\nimport { cardsTC, setGradeTC } from \"../../Redux/cards-reducer\";\r\nimport { authTC } from \"../../Redux/login-reducer\";\r\nimport { AppStateType } from \"../../Redux/store\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: ArrCardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n        const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n        return { sum: newSum, id: newSum < rand ? i : acc.id }\r\n    }\r\n        , { sum: 0, id: -1 });\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nconst LearnPage = () => {\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    // const [first, setFirst] = useState<boolean>(0);\r\n    const { cards } = useSelector((state: AppStateType) => state.cards);\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const [card, setCard] = useState<ArrCardType>({\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        cardsPack_id: '',\r\n        grade: 0,\r\n        shots: 0,\r\n        user_id: '',\r\n        created: '',\r\n        updated: '',\r\n        _id: 'fake'\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        //dispatch(cardsTC(id))\r\n\r\n        if (first) {\r\n            dispatch(cardsTC(id));\r\n            setFirst(false);\r\n        }\r\n\r\n        console.log('cards', cards)\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, id,\r\n        // dispatch, id, cards, first\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!isAuth)\r\n            dispatch(authTC())\r\n    }, [isAuth])\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            // dispatch\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n    if (isAuth === \"\") { return <Redirect to={\"/login\"} />; }\r\n    return (\r\n        <div>\r\n            LearnPage\r\n\r\n            <div>{card.question}</div>\r\n            <div>\r\n                <SuperButton onClick={() => setIsChecked(true)}>check</SuperButton>\r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <div>{card.answer}</div>\r\n\r\n                    {grades.map((g, i) => (\r\n                        <SuperButton key={'grade-' + i} onClick={() => {\r\n                            dispatch(setGradeTC(card._id, i + 1))\r\n                        }}>{g}</SuperButton>\r\n                    ))}\r\n                    <div>grade - {card.grade}</div>\r\n                    <div>shots - {card.shots}</div>\r\n                    <div><SuperButton onClick={onNext}>next</SuperButton></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LearnPage;","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { Page404 } from \"./Components/404/Page404\";\r\nimport { Loginization } from \"./Components/Loginization/Loginization\";\r\nimport { NewPassword } from \"./Components/NewPassword/NewPassword\";\r\nimport { PasswordRecovery } from \"./Components/PasswordRecovery/PasswordRecovery\";\r\nimport { Profile } from \"./Components/Profile/Profile\";\r\nimport { Registration } from \"./Components/Registration/Registration\";\r\nimport { TestPage } from \"./Components/TestPage/TestPage\";\r\nimport { Packs } from \"./Components/Packs/Packs\";\r\nimport { Cards } from \"./Components/Cards/Cards\";\r\nimport LearnPage from './Components/LearnPage/LearnPage';\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    NEW_PASS: '/newPassword/:token',\r\n    RECOVERY_PASS: '/recoveryPass',\r\n    PROFILE: '/profile',\r\n    REGISTRATION: '/registration',\r\n    TEST_PAGE: '/testt',\r\n    CARDS_PAGE: '/cards/:packId',\r\n    PACKS_PAGE: '/packs',\r\n    LEARN_PAGE: '/learn/:id'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*//Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*exact нужен чтоб указать полное совпадение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.NEW_PASS} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.RECOVERY_PASS} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.REGISTRATION} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.TEST_PAGE} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PACKS_PAGE} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.CARDS_PAGE} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LEARN_PAGE} />} />\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Loginization />} />\r\n                <Route path={PATH.NEW_PASS} render={() => <NewPassword />} />\r\n                <Route path={PATH.RECOVERY_PASS} render={() => <PasswordRecovery />} />\r\n                <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration />} />\r\n                <Route path={PATH.TEST_PAGE} render={() => <TestPage />} />\r\n                <Route path={PATH.PACKS_PAGE} render={() => <Packs />} />\r\n                <Route path={PATH.CARDS_PAGE} render={() => <Cards />} />\r\n                <Route path={PATH.LEARN_PAGE} render={() => <LearnPage />} />\r\n\r\n                {/*    // add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Page404 />} />\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { PATH } from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <NavLink to={PATH.LOGIN}>Login |</NavLink>\r\n            <NavLink to={PATH.NEW_PASS}> NewPassword |</NavLink>\r\n            <NavLink to={PATH.PROFILE}> Profile  |</NavLink>\r\n            <NavLink to={PATH.PACKS_PAGE}> PACKS  </NavLink>\r\n            {/*// add NavLinks*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\n\r\nconst initialState = {}\r\n\r\nconst profileReducer = (state = initialState, action: any) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default profileReducer;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport newPasswordReducer from \"./new-password-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport loginReducer from \"./login-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport registrationReducer from \"./reg-reducer\";\r\nimport PasswordRecoveryReducer from \"./password-recovery-reducer\";\r\nimport packsReducer from \"./packs-reducer\";\r\nimport cardsReducer from \"./cards-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    loginPage: loginReducer,\r\n    profile: profileReducer,\r\n    newPassPage: newPasswordReducer,\r\n    recovPass: PasswordRecoveryReducer,\r\n    reg: registrationReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Registration_formSummaryError__hUfR3\",\"container\":\"Registration_container__3Kj67\",\"regContainer\":\"Registration_regContainer__1H7ds\",\"title\":\"Registration_title__JOTpf\",\"subTitle\":\"Registration_subTitle__1P75q\",\"inputs\":\"Registration_inputs__1rk0a\",\"control\":\"Registration_control__Uvt-Q\",\"cancelBtn\":\"Registration_cancelBtn__1JzEV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Loginization_formSummaryError__1kv9-\",\"container\":\"Loginization_container__3qbgz\",\"loginContainer\":\"Loginization_loginContainer__3jXik\",\"title\":\"Loginization_title__Mx7-C\",\"subTitle\":\"Loginization_subTitle__2u_4u\",\"info\":\"Loginization_info__nwEAJ\",\"bold\":\"Loginization_bold__2UsM8\",\"inputs\":\"Loginization_inputs__3g6DW\",\"forgot\":\"Loginization_forgot__1SiPx\",\"regBlock\":\"Loginization_regBlock__10SRH\",\"remember\":\"Loginization_remember__2dfqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsHeaderContainer\":\"Cards_packsHeaderContainer__vVG7F\",\"packsChild\":\"Cards_packsChild__1Xo8l\",\"packsBodyContainer\":\"Cards_packsBodyContainer__1zB6l\",\"packsChild2\":\"Cards_packsChild2__2bA1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"PasswordRecovery_formSummaryError__1a8B8\",\"container\":\"PasswordRecovery_container__1JnOT\",\"recoveryContainer\":\"PasswordRecovery_recoveryContainer__3ckYF\",\"title\":\"PasswordRecovery_title__3fLSt\",\"subTitle\":\"PasswordRecovery_subTitle__2bFLa\",\"info\":\"PasswordRecovery_info__3gfIr\",\"goLogin\":\"PasswordRecovery_goLogin__3RObm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsHeaderContainer\":\"Packs_packsHeaderContainer__3SDK3\",\"packsChild\":\"Packs_packsChild__3dIl3\",\"packsBodyContainer\":\"Packs_packsBodyContainer__385kX\",\"packsChild2\":\"Packs_packsChild2__1jNrC\",\"container\":\"Packs_container__1zSjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"NewPassword_formSummaryError__3c4xf\",\"container\":\"NewPassword_container__1mMzP\",\"newPassContainer\":\"NewPassword_newPassContainer__3DYBT\",\"title\":\"NewPassword_title__3mz7F\",\"subTitle\":\"NewPassword_subTitle__3Lw-u\",\"info\":\"NewPassword_info__2P6zG\",\"inputs\":\"NewPassword_inputs__E-Krt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CheckEmail_container__11lt2\",\"checkContainer\":\"CheckEmail_checkContainer__2cgN4\",\"title\":\"CheckEmail_title__1onot\",\"subTitle\":\"CheckEmail_subTitle__31dj5\",\"info\":\"CheckEmail_info__11edG\",\"icon\":\"CheckEmail_icon__3fz-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsChild\":\"Pack_packsChild__36JO5\",\"packsBodyContainer\":\"Pack_packsBodyContainer__22uAN\",\"packsChild2\":\"Pack_packsChild2__eM7VU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Paginator_selected__OXT0r\",\"paginat\":\"Paginator_paginat__2txDy\",\"container\":\"Paginator_container__3pfBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1U37C\",\"errorInput\":\"SuperInputText_errorInput__MeQdj\",\"error\":\"SuperInputText_error__2n6Sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__hX_R6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Vh9tc\",\"spanClassName\":\"SuperCheckbox_spanClassName__1qBHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page404_container__2X-4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__3QO5Z\"};"],"sourceRoot":""}