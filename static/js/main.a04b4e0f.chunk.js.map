{"version":3,"sources":["Components/Registration/Registration.module.css","SuperComponents/c1-SuperInputText/SuperInputText.module.css","SuperComponents/c2-SuperButton/SuperButton.module.css","SuperComponents/c3-SuperCheckbox/SuperCheckbox.module.css","Components/404/Page404.tsx","api/fridayProject-api.ts","Redux/login-reducer.tsx","SuperComponents/c1-SuperInputText/SuperInputText.tsx","SuperComponents/c2-SuperButton/SuperButton.tsx","SuperComponents/c3-SuperCheckbox/SuperCheckbox.tsx","Components/Loginization/Loginization.tsx","Redux/new-password-reducer.tsx","Common/Preloader/Circles-menu.gif","Common/Preloader/Preloader.tsx","Components/NewPassword/NewPassword.tsx","Redux/password-recovery-reducer.tsx","Components/PasswordRecovery/PasswordRecovery.tsx","Components/Profile/Profile.tsx","Redux/reg-reducer.tsx","Components/Registration/Registration.tsx","Components/TestPage/TestPage.tsx","Routes.tsx","Header.tsx","App.tsx","reportWebVitals.ts","Redux/profile-reducer.tsx","Redux/store.ts","index.tsx"],"names":["module","exports","Page404","instance","axios","create","withCredentials","baseURL","authApi","post","email","password","rememberMe","delete","from","message","resetPasswordToken","initialState","userData","isAuth","getUserDataAC","profileData","type","isLoggedInAC","_id","loginReducer","state","action","error","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","trim","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Loginization","dispatch","useDispatch","useState","setEmail","setPassword","setRememberMe","useSelector","loginPage","to","style","color","margin","onClick","then","res","data","catch","err","alert","loginTC","status","isInitialized","setAppErrorAC","setAppStatusAC","newPasswordReducer","Preloader","alt","src","preloader","NewPassword","passwordConf","setPasswordConf","token","useParams","newPassPage","formSummaryError","disabled","response","finally","newPassTC","PasswordRecoveryReducer","PasswordRecovery","recovPass","sendTokenTC","Profile","useEffect","name","created","updated","publicCardPacksCount","setIsInitializedAC","registrationReducer","Registration","reg","registerTC","TestPage","PATH","Routes","path","exact","render","Header","App","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","profileReducer","rootReducer","combineReducers","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a04b4e0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Registration_formControl__KbHEH\",\"error\":\"Registration_error__3W7r0\",\"formSummaryError\":\"Registration_formSummaryError__nUX38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2ugTB\",\"errorInput\":\"SuperInputText_errorInput__1IKV3\",\"error\":\"SuperInputText_error__K77dC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__23O9l\",\"red\":\"SuperButton_red__3vChV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3efuu\",\"spanClassName\":\"SuperCheckbox_spanClassName__30h9j\"};","import React from 'react';\r\n\r\nexport function Page404() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>404</h1>\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\"\r\n    //baseURL: \"http://localhost:7542/2.0\"\r\n})\r\n\r\n//api\r\n\r\n\r\nexport const authApi = {\r\n\r\n    me() {\r\n        return instance.post<ResponseLoginType>(\"/auth/me\", {})\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ResponseLoginType>(\"/auth/login\", {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(\"/auth/me\")\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseRegisterType>(\"/auth/register\", {email, password})\r\n    },\r\n    forgot(email: string, from: string, message: string) {\r\n        return instance.post<ResponseForgotType>(\"/auth/forgot\", {email, from, message})\r\n    },\r\n    newPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post(\"/auth/set-new-password\", {password, resetPasswordToken})\r\n    }\r\n}\r\n\r\n//types\r\n\r\n\r\nexport type ResponseLoginType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type ResponseRegisterType = {\r\n    addedUser: any,\r\n    error?: string\r\n}\r\n\r\nexport type ResponseForgotType = {\r\n    answer: boolean,\r\n    html: boolean,\r\n    info: string,\r\n    success: boolean,\r\n    error?: string\r\n}\r\n","import React from 'react'\r\nimport { Dispatch } from 'redux';\r\nimport { authApi, ResponseLoginType } from '../api/fridayProject-api';\r\n\r\nlet initialState = {\r\n    userData: {} as ResponseLoginType,\r\n    isAuth: \"\" as string\r\n}\r\ntype PayloadType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n    info?: string\r\n}\r\n\r\nexport type InitialAuthType = typeof initialState;\r\nexport type LoginActionType = SetUserDataACType | SetErrorACType | IsLoggedInACType\r\n\r\nconst loginReducer = (state: InitialAuthType = initialState, action: LoginActionType) => {\r\n    switch (action.type) {\r\n        case 'LOGIN/SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                userData: action.profileData,\r\n            }\r\n        case 'LOGIN/SET-ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case 'LOGIN/IS-LOGGED-IN':\r\n            return {\r\n                ...state,\r\n                isAuth: action._id\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//Action creators\r\ntype SetUserDataACType = ReturnType<typeof getUserDataAC>\r\ntype SetErrorACType = ReturnType<typeof setErrorAC>\r\ntype IsLoggedInACType = ReturnType<typeof isLoggedInAC>\r\n\r\nexport const getUserDataAC = (profileData: PayloadType) => ({\r\n    type: 'LOGIN/SET-USER-DATA',\r\n    profileData,\r\n} as const)\r\n\r\nexport const setErrorAC = (error: string | null) => ({\r\n    type: 'LOGIN/SET-ERROR',\r\n    error\r\n} as const)\r\n\r\nexport const isLoggedInAC = (_id: string) => ({\r\n    type: 'LOGIN/IS-LOGGED-IN',\r\n    _id\r\n} as const)\r\n\r\n//Thunk creators\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    authApi.login(email, password, rememberMe)\r\n        .then(\r\n            res => {\r\n\r\n                dispatch(getUserDataAC(res.data))\r\n                dispatch(isLoggedInAC(res.data._id))\r\n            }\r\n        )\r\n        .catch(err => {\r\n            dispatch(setErrorAC(err))\r\n            alert(\"Введены неверные данные\")\r\n        })\r\n}\r\n\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    authApi.logout()\r\n        .then(res => {\r\n            dispatch(isLoggedInAC(\"\"))\r\n        }).catch(err => {\r\n\r\n        })\r\n\r\n}\r\n\r\nexport const authTC = () => (dispatch: Dispatch) => {\r\n    authApi.me()\r\n        .then(res => {\r\n            dispatch(getUserDataAC(res.data))\r\n            dispatch(isLoggedInAC(res.data._id))\r\n\r\n        }).catch(err => {\r\n            alert(\"Введите свои данные\")\r\n        })\r\n\r\n}\r\nexport default loginReducer;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        //onChange  && onChange(e)// если есть пропс onChange\r\n        //onChange && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n\r\n        onChangeText  && onChangeText(e.currentTarget.value.trim())\r\n        //onChangeText &&  onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}// отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n         onChange && onChange(e)}\r\n    // if (onChangeChecked) {onChangeChecked(e.currentTarget.checked)}\r\n    // if (onChange) {onChange(e)}\r\n        // onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // onChange && onChange(e)}\r\n     // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isLoggedInAC, loginTC } from '../../Redux/login-reducer';\r\nimport { AppStateType } from '../../Redux/store';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './Loginization.module.css'\r\nimport SuperCheckbox from '../../SuperComponents/c3-SuperCheckbox/SuperCheckbox';\r\n\r\n\r\n\r\nexport function Loginization() {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n\r\n    const onCLickHandler = () => {\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n    const checkboxChange = () => {\r\n        setRememberMe(!rememberMe)\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <h1>Loginization</h1>\r\n            <span style={{ color: 'green', margin: \"10px\" }}>nya-admin@nya.nya <br />\r\n                1qazxcvBG</span> <hr />\r\n\r\n            <div>Email:</div>\r\n            <SuperInputText value={email} onChangeText={setEmail} />\r\n            <div>Password:</div>\r\n            <SuperInputText value={password} onChangeText={setPassword} />\r\n            <br />\r\n            \r\n            <span><SuperCheckbox checked={rememberMe} onChange={checkboxChange} /> Remember Me</span>\r\n            <div>\r\n                <SuperButton onClick={onCLickHandler}>Sign Up</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Dispatch} from \"redux\";\r\nimport {authApi} from \"../api/fridayProject-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\nconst newPasswordReducer = (state = initialState, action: ActionsType) => {\r\n\r\n    switch (action.type) {\r\n        case \"NEW_PASS/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"NEW_PASS/SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case \"NEW_PASS/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n    }\r\n    return {...state};\r\n}\r\n\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'NEW_PASS/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'NEW_PASS/SET-STATUS', status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({\r\n    type: 'NEW_PASS/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\n\r\nexport const newPassTC = (password: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.newPassword(password, token)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\nexport type setStatusActionType = ReturnType<typeof setAppStatusAC>;\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setStatusActionType | setIsInitializedActionType\r\n\r\n\r\nexport default newPasswordReducer;","export default __webpack_public_path__ + \"static/media/Circles-menu.20a21d3c.gif\";","import React from \"react\";\r\nimport preloader from \"./Circles-menu.gif\"\r\n\r\nconst Preloader = () => {\r\n    return <div><img alt={\"preloader\"} src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader","import React, {useState} from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {newPassTC} from \"../../Redux/new-password-reducer\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport {setAppErrorAC} from \"../../Redux/new-password-reducer\";\r\nimport style from \"../Registration/Registration.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nexport function NewPassword() {\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [passwordConf, setPasswordConf] = useState<string>(\"\")\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n\r\n    const status = useSelector<AppStateType, string>((state) => state.newPassPage.status)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.newPassPage.error)\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.newPassPage.isInitialized)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    if (isInitialized) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n    const buttonCallback = () => {\r\n        if (password === passwordConf) {\r\n            dispatch(newPassTC(password, token))\r\n        } else {\r\n            dispatch(setAppErrorAC(\"Password mismatch\"))\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {status !== 'idle' ? <Preloader/> : null}\r\n            <h1>NewPassword</h1>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>password:</div>\r\n            <SuperInputText value={password} onChangeText={setPassword}/>\r\n            <div>Repeat password:</div>\r\n            <SuperInputText value={passwordConf} onChangeText={setPasswordConf}/>\r\n            <div>\r\n                <SuperButton disabled={status !== \"idle\"} onClick={buttonCallback}>Cover</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Dispatch} from \"redux\";\r\nimport {authApi} from \"../api/fridayProject-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nconst from = \"test-front-admin<ai73a@yandex.by>\"\r\nconst message = `<div style=\"background-color: lime; padding: 15px\"> \r\npassword recovery link(bla bla): \r\n<a href='http://localhost:3000/FridayIgnatProject#/newPassword/$token$'>\r\nlink</a></div>`\r\n\r\nconst PasswordRecoveryReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"FORGOT/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"FORGOT/SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case \"FORGOT/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n    }\r\n    return {...state};\r\n}\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'FORGOT/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'FORGOT/SET-STATUS', status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({\r\n    type: 'FORGOT/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\nexport const sendTokenTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.forgot(email, from, message)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\nexport type setStatusActionType = ReturnType<typeof setAppStatusAC>;\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setStatusActionType | setIsInitializedActionType\r\n\r\n\r\nexport default PasswordRecoveryReducer;","import React, {useState} from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendTokenTC} from \"../../Redux/password-recovery-reducer\";\r\nimport style from \"../Registration/Registration.module.css\";\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nexport function PasswordRecovery() {\r\n    //useState\r\n    const [email, setEmail] = useState<string>(\"\")\r\n\r\n//useSelectors\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.recovPass.isInitialized)\r\n    const status = useSelector<AppStateType, string>((state) => state.recovPass.status)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.recovPass.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const buttonCallback = () => {\r\n        dispatch(sendTokenTC(email))\r\n    }\r\n\r\n    if (isInitialized) {\r\n        return <div>OOOkay, check email</div>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {status !== 'idle' ? <Preloader/> : null}\r\n            <h1>PasswordRecovery</h1>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>Email:</div>\r\n            <SuperInputText value={email} onChangeText={setEmail}/>\r\n            <div>\r\n                <SuperButton disabled={status !== \"idle\"} onClick={buttonCallback}>SEND</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ResponseLoginType } from '../../api/fridayProject-api';\r\nimport { authTC, logoutTC } from '../../Redux/login-reducer';\r\nimport { AppStateType } from '../../Redux/store';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport function Profile() {\r\n\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const data = useSelector<AppStateType, ResponseLoginType>(state => state.loginPage.userData)\r\n\r\n    useEffect(() => {\r\n        dispatch(authTC())\r\n    }, [])\r\n\r\n    const logout = () => {\r\n        dispatch(logoutTC());\r\n    }\r\n    if (isAuth === \"\") { return <Redirect to={\"/login\"} />; }\r\n\r\n    //при успешной логинизации отрисовываем данные пользователя\r\n    return (\r\n\r\n        <div>\r\n            <h1>Profile</h1>\r\n            <br />\r\n            <h3>Данные пользователя</h3>\r\n\r\n            <p>email - {data.email}</p>\r\n            <p>name - {data.name}</p>\r\n            <p>created - {data.created}</p>\r\n            <p>updated - {data.updated}</p>\r\n            <p>count of cards - {data.publicCardPacksCount}</p>\r\n            <br />\r\n            <button onClick={logout}>Log Out</button>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport {Dispatch} from 'redux'\r\nimport {authApi} from \"../api/fridayProject-api\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n\r\nconst registrationReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"REG/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"REG/SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case \"REG/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n    }\r\n\r\n    return {...state};\r\n}\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'REG/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'REG/SET-STATUS', status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'REG/SET-IS-INITIALIZED', isInitialized} as const)\r\n\r\n\r\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.register(email, password)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\nexport type setStatusActionType = ReturnType<typeof setAppStatusAC>;\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setStatusActionType | setIsInitializedActionType\r\n\r\n\r\nexport default registrationReducer;","import React, {useEffect, useState} from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerTC, setAppErrorAC, setIsInitializedAC} from \"../../Redux/reg-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport style from \"./Registration.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nexport function Registration() {\r\n//useState\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [passwordConf, setPasswordConf] = useState<string>(\"\")\r\n//useSelectors\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.reg.isInitialized)\r\n    const status = useSelector<AppStateType, string>((state) => state.reg.status)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.reg.error)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const buttonCallback = () => {\r\n        if (password === passwordConf) {\r\n            dispatch(registerTC(email, password))\r\n        } else {\r\n            dispatch(setAppErrorAC(\"Password mismatch\"))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setIsInitializedAC(false))\r\n        dispatch(setAppErrorAC(null))\r\n    },[isInitialized])\r\n\r\n    if (isInitialized) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {status !== 'idle'? <Preloader/> : null}\r\n            <h1>Registration</h1>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>Email:</div>\r\n            <SuperInputText value={email} onChangeText={setEmail}/>\r\n            <div>password:</div>\r\n            <SuperInputText value={password} onChangeText={setPassword}/>\r\n            <div>confirm password:</div>\r\n            <SuperInputText value={passwordConf} onChangeText={setPasswordConf}/>\r\n            <div>\r\n                <SuperButton disabled={status !== 'idle'} onClick={buttonCallback}>Sign Up</SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../SuperComponents/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport function TestPage() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>TestPage</h1>\r\n            <SuperInputText/>\r\n            <SuperButton>hello!!!!</SuperButton>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom';\r\nimport {Page404} from \"./Components/404/Page404\";\r\nimport {Loginization} from \"./Components/Loginization/Loginization\";\r\nimport {NewPassword} from \"./Components/NewPassword/NewPassword\";\r\nimport {PasswordRecovery} from \"./Components/PasswordRecovery/PasswordRecovery\";\r\nimport {Profile} from \"./Components/Profile/Profile\";\r\nimport {Registration} from \"./Components/Registration/Registration\";\r\nimport {TestPage} from \"./Components/TestPage/TestPage\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    NEW_PASS: '/newPassword/:token',\r\n    RECOVERY_PASS: '/recoveryPass',\r\n    PROFILE: '/profile',\r\n    REGISTRATION: '/registration',\r\n    TEST_PAGE: '/testt'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*//Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.NEW_PASS}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.RECOVERY_PASS}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.REGISTRATION}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.TEST_PAGE}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Loginization/>}/>\r\n                <Route path={PATH.NEW_PASS} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.RECOVERY_PASS} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.TEST_PAGE} render={() => <TestPage/>}/>\r\n                {/*    // add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Page404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <NavLink to={PATH.LOGIN}>Login </NavLink>\r\n            <NavLink to={PATH.REGISTRATION}>Registration </NavLink>\r\n            <NavLink to={PATH.NEW_PASS}>NewPassword </NavLink>\r\n            <NavLink to={PATH.PROFILE}>Profile </NavLink>\r\n            <NavLink to={PATH.RECOVERY_PASS}>PasswordRecovery </NavLink>\r\n            <NavLink to={PATH.TEST_PAGE}>Super Component </NavLink>\r\n            {/*// add NavLinks*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n    console.log(\"Hello\")\n  return (\n\n    <div >\n     <h1>Hello World</h1>\n        <Header/>\n        <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst initialState = {}\r\n\r\nconst profileReducer = (state = initialState, action: any) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default profileReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport newPasswordReducer from \"./new-password-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport loginReducer from \"./login-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport registrationReducer from \"./reg-reducer\";\r\nimport PasswordRecoveryReducer from \"./password-recovery-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    loginPage: loginReducer,\r\n    profile: profileReducer,\r\n    newPassPage: newPasswordReducer,\r\n    recovPass: PasswordRecoveryReducer,\r\n    reg: registrationReducer,\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}