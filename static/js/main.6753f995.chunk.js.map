{"version":3,"sources":["SuperComponents/c1-SuperInputText/SuperInputText.module.css","SuperComponents/c2-SuperButton/SuperButton.module.css","SuperComponents/c3-SuperCheckbox/SuperCheckbox.module.css","Components/404/Page404.tsx","Components/Loginization/Loginization.tsx","Components/NewPassword/NewPassword.tsx","Components/PasswordRecovery/PasswordRecovery.tsx","Components/Profile/Profile.tsx","Components/Registration/Registration.tsx","SuperComponents/c1-SuperInputText/SuperInputText.tsx","SuperComponents/c2-SuperButton/SuperButton.tsx","SuperComponents/c3-SuperCheckbox/SuperCheckbox.tsx","Components/TestPage/TestPage.tsx","Routes.tsx","Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Page404","Loginization","NewPassword","PasswordRecovery","Profile","Registration","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","trim","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","TestPage","PATH","Routes","path","exact","render","to","Header","App","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6753f995.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2ugTB\",\"errorInput\":\"SuperInputText_errorInput__1IKV3\",\"error\":\"SuperInputText_error__K77dC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__23O9l\",\"red\":\"SuperButton_red__3vChV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3efuu\",\"spanClassName\":\"SuperCheckbox_spanClassName__30h9j\"};","import React from 'react';\r\n\r\nexport function Page404() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>404</h1>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function Loginization() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>Loginization</h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function NewPassword() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>NewPassword</h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function PasswordRecovery() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>PasswordRecovery</h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function Profile() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>Profile</h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport function Registration() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>Registration</h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        //onChange  && onChange(e)// если есть пропс onChange\r\n        //onChange && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n\r\n        onChangeText  && onChangeText(e.currentTarget.value.trim())\r\n        //onChangeText &&  onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}// отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n         onChange && onChange(e)}\r\n    // if (onChangeChecked) {onChangeChecked(e.currentTarget.checked)}\r\n    // if (onChange) {onChange(e)}\r\n        // onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // onChange && onChange(e)}\r\n     // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../SuperComponents/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport function TestPage() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>TestPage</h1>\r\n            <SuperInputText/>\r\n            <SuperButton>hello</SuperButton>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom';\r\nimport {Page404} from \"./Components/404/Page404\";\r\nimport {Loginization} from \"./Components/Loginization/Loginization\";\r\nimport {NewPassword} from \"./Components/NewPassword/NewPassword\";\r\nimport {PasswordRecovery} from \"./Components/PasswordRecovery/PasswordRecovery\";\r\nimport {Profile} from \"./Components/Profile/Profile\";\r\nimport {Registration} from \"./Components/Registration/Registration\";\r\nimport {TestPage} from \"./Components/TestPage/TestPage\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    NEW_PASS: '/newPassword',\r\n    RECOVERY_PASS: '/recoveryPass',\r\n    PROFILE: '/profile',\r\n    REGISTRATION: '/registration',\r\n    TEST_PAGE: '/testt'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*//Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.NEW_PASS}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.RECOVERY_PASS}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.REGISTRATION}/>}/>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.TEST_PAGE}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Loginization/>}/>\r\n                <Route path={PATH.NEW_PASS} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.RECOVERY_PASS} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.TEST_PAGE} render={() => <TestPage/>}/>\r\n                {/*    // add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Page404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <NavLink to={PATH.LOGIN}>Login </NavLink>\r\n            <NavLink to={PATH.REGISTRATION}>Registration </NavLink>\r\n            <NavLink to={PATH.NEW_PASS}>NewPassword </NavLink>\r\n            <NavLink to={PATH.PROFILE}>Profile </NavLink>\r\n            <NavLink to={PATH.RECOVERY_PASS}>PasswordRecovery </NavLink>\r\n            <NavLink to={PATH.TEST_PAGE}>Super Component </NavLink>\r\n            {/*// add NavLinks*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n    console.log(\"Hello\")\n  return (\n\n    <div >\n     <h1>Hello World</h1>\n        <Header/>\n        <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}