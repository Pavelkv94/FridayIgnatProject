{"version":3,"sources":["Components/404/Page404.tsx","api/fridayProject-api.ts","Redux/login-reducer.tsx","SuperComponents/c1-SuperInputText/SuperInputText.tsx","SuperComponents/c2-SuperButton/SuperButton.tsx","SuperComponents/c3-SuperCheckbox/SuperCheckbox.tsx","Common/Preloader/Circles-menu.gif","Common/Preloader/Preloader.tsx","Components/Loginization/Loginization.tsx","Redux/new-password-reducer.tsx","Components/NewPassword/NewPassword.tsx","Redux/password-recovery-reducer.tsx","Components/PasswordRecovery/PasswordRecovery.tsx","Components/Profile/Profile.tsx","Redux/reg-reducer.tsx","Components/Registration/Registration.tsx","Components/TestPage/TestPage.tsx","api/packs-api.ts","Redux/packs-reducer.tsx","Redux/cards-reducer.tsx","Common/Search/Range/RangeSlider.tsx","Common/Search/Search.tsx","Modal/DeleteModal.tsx","Modal/UpdateModal.tsx","Components/Packs/Pack/Pack.tsx","Common/Paginator/Paginator.tsx","Common/SortButton/SortButton.tsx","Modal/AddedModal.tsx","Components/Packs/Packs.tsx","Components/Cards/Cards.tsx","Components/LearnPage/LearnPage.tsx","Routes.tsx","Header.tsx","App.tsx","reportWebVitals.ts","Redux/profile-reducer.tsx","Redux/store.ts","index.tsx","Components/Cards/Cards.module.css","Components/Packs/Packs.module.css","Components/Packs/Pack/Pack.module.css","Components/Registration/Registration.module.css","SuperComponents/c1-SuperInputText/SuperInputText.module.css","Common/Paginator/Paginator.module.css","SuperComponents/c2-SuperButton/SuperButton.module.css","SuperComponents/c3-SuperCheckbox/SuperCheckbox.module.css","Components/Loginization/Loginization.module.css","Common/Search/Search.module.css"],"names":["Page404","instance","axios","create","withCredentials","baseURL","authApi","post","email","password","rememberMe","delete","from","message","resetPasswordToken","initialState","userData","isAuth","status","error","setAppStatusAC","type","getUserDataAC","profileData","setErrorAC","isLoggedInAC","_id","loginReducer","state","action","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","trim","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Preloader","alt","src","preloader","Loginization","dispatch","useDispatch","useState","setEmail","setPassword","setRememberMe","useSelector","loginPage","to","formSummaryError","style","color","margin","onClick","then","res","data","catch","err","response","finally","loginTC","isInitialized","setAppErrorAC","newPasswordReducer","NewPassword","passwordConf","setPasswordConf","token","useParams","newPassPage","disabled","newPassTC","PasswordRecoveryReducer","PasswordRecovery","recovPass","sendTokenTC","Profile","useEffect","name","created","updated","publicCardPacksCount","setIsInitializedAC","registrationReducer","Registration","reg","registerTC","TestPage","packsApi","min","max","page","pageCount","packName","sortPacks","user_id","get","params","cardsPack","id","put","cardsPack_id","cardQuestion","sortCards","question","answer","card","card_id","grade","cardPacks","cardPacksTotalCount","minCardsCount","maxCardsCount","undefined","setUserIdforPacksAC","setAppErrorPacksAC","packsTC","getState","packs","packsReducer","n","sortValue","cards","cardsTotalCount","maxGrade","minGrade","packUserId","cardsTC","cardsReducer","userId","useStyles","makeStyles","root","width","marginLeft","marginRight","RangeSlider","props","classes","React","values","setValue","Typography","gutterBottom","Slider","target","setRangeCardsAC","valueLabelDisplay","aria-labelledby","Search","container","inputCallback","btnCallback","DeleteItem","open","setOpen","handleClickOpen","handleClose","Button","size","variant","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","callback","autoFocus","UpdateItem","title","setTitle","handleClickUPD","TextField","fullWidth","Pack","userID","packsBodyContainer","packsChild2","cardsCount","packsUpdateTC","Paginator","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onChangeHandler","filter","p","map","currentPage","selected","paginat","onPageChanged","SortButton","sortCallback","AddedItem","title2","setTitle2","Packs","isOwner","sortingPack","sortPackAC","setSearchValuePackAC","packsHeaderContainer","packsChild","namePack","m","setPageOfPacksAC","Number","Cards","packId","sortingCard","sortCardAC","setSearchValueCardAC","cardsAdd","cardsUpdateTC","newPage","setPageOfCardsAC","grades","getCard","sum","reduce","acc","rand","random","newSum","console","log","LearnPage","isChecked","setIsChecked","first","setFirst","shots","setCard","length","g","setGradeAC","updatedGrade","setGradeTC","PATH","Routes","path","exact","render","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","profileReducer","rootReducer","combineReducers","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.405be817.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Page404() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>404</h1>\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\"\r\n    //baseURL: \"http://localhost:7542/2.0\"\r\n})\r\n\r\n//api\r\n\r\n\r\nexport const authApi = {\r\n\r\n    me() {\r\n        return instance.post<ResponseLoginType>(\"/auth/me\", {})\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ResponseLoginType>(\"/auth/login\", {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(\"/auth/me\")\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseRegisterType>(\"/auth/register\", {email, password})\r\n    },\r\n    forgot(email: string, from: string, message: string) {\r\n        return instance.post<ResponseForgotType>(\"/auth/forgot\", {email, from, message})\r\n    },\r\n    newPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post(\"/auth/set-new-password\", {password, resetPasswordToken})\r\n    }\r\n}\r\n\r\n//types\r\n\r\n\r\nexport type ResponseLoginType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type ResponseRegisterType = {\r\n    addedUser: any,\r\n    error?: string\r\n}\r\n\r\nexport type ResponseForgotType = {\r\n    answer: boolean,\r\n    html: boolean,\r\n    info: string,\r\n    success: boolean,\r\n    error?: string\r\n}\r\n","import React from 'react'\r\nimport { Dispatch } from 'redux';\r\nimport { authApi, ResponseLoginType } from '../api/fridayProject-api';\r\nimport { RequestStatusType } from './reg-reducer';\r\n\r\nlet initialState = {\r\n    userData: {} as ResponseLoginType,\r\n    isAuth: \"\" as string,\r\n    status: \"idle\",\r\n    error: \"\" as string | null,\r\n}\r\ntype PayloadType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n    info?: string\r\n}\r\n\r\nexport type InitialAuthType = typeof initialState;\r\nexport type LoginActionType = SetUserDataACType | SetErrorACType | IsLoggedInACType | LogAppASatusACType\r\n\r\nconst loginReducer = (state: InitialAuthType = initialState, action: LoginActionType) => {\r\n    switch (action.type) {\r\n        case 'LOGIN/SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                userData: action.profileData,\r\n            }\r\n        case 'LOGIN/SET-ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case 'LOGIN/IS-LOGGED-IN':\r\n            return {\r\n                ...state,\r\n                isAuth: action._id\r\n            }\r\n        case 'LOGIN/SET-STATUS':\r\n            return { ...state, status: action.status }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//Action creators\r\ntype SetUserDataACType = ReturnType<typeof getUserDataAC>\r\ntype SetErrorACType = ReturnType<typeof setErrorAC>\r\ntype IsLoggedInACType = ReturnType<typeof isLoggedInAC>\r\ntype LogAppASatusACType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({\r\n    type: 'LOGIN/SET-STATUS',\r\n    status\r\n} as const)\r\n\r\nexport const getUserDataAC = (profileData: PayloadType) => ({\r\n    type: 'LOGIN/SET-USER-DATA',\r\n    profileData,\r\n} as const)\r\n\r\nexport const setErrorAC = (error: string | null) => ({\r\n    type: 'LOGIN/SET-ERROR',\r\n    error\r\n} as const)\r\n\r\nexport const isLoggedInAC = (_id: string) => ({\r\n    type: 'LOGIN/IS-LOGGED-IN',\r\n    _id\r\n} as const)\r\n\r\n//Thunk creators\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.login(email, password, rememberMe)\r\n        .then(\r\n            res => {\r\n                dispatch(getUserDataAC(res.data))\r\n                dispatch(isLoggedInAC(res.data._id))\r\n                dispatch(setAppStatusAC(\"succeeded\"))\r\n            }\r\n        )\r\n        .catch(err => {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.logout()\r\n        .then(res => {\r\n            dispatch(isLoggedInAC(\"\"))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        }).catch(err => {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const authTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.me()\r\n        .then(res => {\r\n            dispatch(getUserDataAC(res.data))\r\n            dispatch(isLoggedInAC(res.data._id))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n\r\n        }).catch(err => {\r\n            dispatch(setErrorAC(err.response.data.error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\nexport default loginReducer;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        //onChange  && onChange(e)// если есть пропс onChange\r\n        //onChange && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n\r\n        onChangeText  && onChangeText(e.currentTarget.value.trim())\r\n        //onChangeText &&  onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}// отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n         onChange && onChange(e)}\r\n    // if (onChangeChecked) {onChangeChecked(e.currentTarget.checked)}\r\n    // if (onChange) {onChange(e)}\r\n        // onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // onChange && onChange(e)}\r\n     // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","export default __webpack_public_path__ + \"static/media/Circles-menu.20a21d3c.gif\";","import React from \"react\";\r\nimport preloader from \"./Circles-menu.gif\"\r\n\r\nconst Preloader = () => {\r\n    return <div><img alt={\"preloader\"} src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isLoggedInAC, loginTC } from '../../Redux/login-reducer';\r\nimport { AppStateType } from '../../Redux/store';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './Loginization.module.css'\r\nimport SuperCheckbox from '../../SuperComponents/c3-SuperCheckbox/SuperCheckbox';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nexport function Loginization() {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const status = useSelector<AppStateType, string>((state) => state.loginPage.status)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.loginPage.error)\r\n\r\n    const onCLickHandler = () => {\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n    const checkboxChange = () => {\r\n        setRememberMe(!rememberMe)\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            {status !== 'idle' ? <Preloader /> : null}\r\n            <h1>Loginization</h1>\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <span style={{ color: 'green', margin: \"10px\" }}>pavlik.gerasim@yandex.by <br />\r\n                123456789</span>\r\n            <hr />\r\n\r\n            <div>Email:</div>\r\n            <SuperInputText value={email} onChangeText={setEmail} />\r\n            <div>Password:</div>\r\n            <SuperInputText value={password} onChangeText={setPassword} />\r\n            <br />\r\n\r\n            <span><SuperCheckbox checked={rememberMe} onChange={checkboxChange} /> Remember Me</span>\r\n            <div>\r\n                <SuperButton onClick={onCLickHandler}>Sign In</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Dispatch} from \"redux\";\r\nimport {authApi} from \"../api/fridayProject-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\nconst newPasswordReducer = (state = initialState, action: ActionsType) => {\r\n\r\n    switch (action.type) {\r\n        case \"NEW_PASS/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"NEW_PASS/SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case \"NEW_PASS/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n    }\r\n    return {...state};\r\n}\r\n\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'NEW_PASS/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'NEW_PASS/SET-STATUS', status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({\r\n    type: 'NEW_PASS/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\n\r\nexport const newPassTC = (password: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.newPassword(password, token)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\nexport type setStatusActionType = ReturnType<typeof setAppStatusAC>;\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setStatusActionType | setIsInitializedActionType\r\n\r\n\r\nexport default newPasswordReducer;","import React, {useState} from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {newPassTC} from \"../../Redux/new-password-reducer\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport {setAppErrorAC} from \"../../Redux/new-password-reducer\";\r\nimport style from \"../Registration/Registration.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nexport function NewPassword() {\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [passwordConf, setPasswordConf] = useState<string>(\"\")\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n\r\n    const status = useSelector<AppStateType, string>((state) => state.newPassPage.status)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.newPassPage.error)\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.newPassPage.isInitialized)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    if (isInitialized) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n    const buttonCallback = () => {\r\n        if (password === passwordConf) {\r\n            dispatch(newPassTC(password, token))\r\n        } else {\r\n            dispatch(setAppErrorAC(\"Password mismatch\"))\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {status !== 'idle' ? <Preloader/> : null}\r\n            <h1>NewPassword</h1>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>password:</div>\r\n            <SuperInputText value={password} onChangeText={setPassword}/>\r\n            <div>Repeat password:</div>\r\n            <SuperInputText value={passwordConf} onChangeText={setPasswordConf}/>\r\n            <div>\r\n                <SuperButton disabled={status !== \"idle\"} onClick={buttonCallback}>Cover</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Dispatch} from \"redux\";\r\nimport {authApi} from \"../api/fridayProject-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nconst from = \"test-front-admin<ai73a@yandex.by>\"\r\nconst message = `<div style=\"background-color: lime; padding: 15px\"> \r\npassword recovery link(bla bla): \r\n<a href='http://sozdatel31.github.io/FridayIgnatProject#/newPassword/$token$'>\r\nlink</a></div>`\r\n\r\nconst PasswordRecoveryReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"FORGOT/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"FORGOT/SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case \"FORGOT/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n    }\r\n    return {...state};\r\n}\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'FORGOT/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'FORGOT/SET-STATUS', status} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({\r\n    type: 'FORGOT/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\nexport const sendTokenTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.forgot(email, from, message)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\nexport type setStatusActionType = ReturnType<typeof setAppStatusAC>;\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setStatusActionType | setIsInitializedActionType\r\n\r\n\r\nexport default PasswordRecoveryReducer;","import React, {useState} from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendTokenTC} from \"../../Redux/password-recovery-reducer\";\r\nimport style from \"../Registration/Registration.module.css\";\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nexport function PasswordRecovery() {\r\n    //useState\r\n    const [email, setEmail] = useState<string>(\"\")\r\n\r\n//useSelectors\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.recovPass.isInitialized)\r\n    const status = useSelector<AppStateType, string>((state) => state.recovPass.status)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.recovPass.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const buttonCallback = () => {\r\n        dispatch(sendTokenTC(email))\r\n    }\r\n\r\n    if (isInitialized) {\r\n        return <div>OOOkay, check email</div>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {status !== 'idle' ? <Preloader/> : null}\r\n            <h1>PasswordRecovery</h1>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>Email:</div>\r\n            <SuperInputText value={email} onChangeText={setEmail}/>\r\n            <div>\r\n                <SuperButton disabled={status !== \"idle\"} onClick={buttonCallback}>SEND</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ResponseLoginType } from '../../api/fridayProject-api';\r\nimport { authTC, logoutTC } from '../../Redux/login-reducer';\r\nimport { AppStateType } from '../../Redux/store';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport function Profile() {\r\n\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    //const isAuthErr = useSelector<AppStateType, string | null>(state => state.loginPage.error)\r\n    const data = useSelector<AppStateType, ResponseLoginType>(state => state.loginPage.userData)\r\n\r\n    useEffect(() => {\r\n        if (!isAuth)\r\n            dispatch(authTC())\r\n    }, [])\r\n\r\n    const logout = () => {\r\n        dispatch(logoutTC());\r\n    }\r\n    if (isAuth === \"\") { return <Redirect to={\"/login\"} />; }\r\n\r\n    //при успешной логинизации отрисовываем данные пользователя\r\n    return (\r\n\r\n        <div>\r\n            <h1>Profile</h1>\r\n            <br />\r\n            <h3>Данные пользователя</h3>\r\n            <p>email - {data.email}</p>\r\n            <p>name - {data.name}</p>\r\n            <p>created - {data.created}</p>\r\n            <p>updated - {data.updated}</p>\r\n            <p>count of cards - {data.publicCardPacksCount}</p>\r\n            <br />\r\n            <button onClick={logout}>Log Out</button>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { Dispatch } from 'redux'\r\nimport { authApi } from \"../api/fridayProject-api\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    isInitialized: boolean\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n\r\nconst registrationReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"REG/SET-ERROR\":\r\n            return { ...state, error: action.error }\r\n        case \"REG/SET-IS-INITIALIZED\":\r\n            return { ...state, isInitialized: action.isInitialized }\r\n        case \"REG/SET-STATUS\":\r\n            return { ...state, status: action.status }\r\n        default: return { ...state };\r\n    }\r\n}\r\nexport const setAppErrorAC = (error: string | null) => ({ type: 'REG/SET-ERROR', error } as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({ type: 'REG/SET-STATUS', status } as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({ type: 'REG/SET-IS-INITIALIZED', isInitialized } as const)\r\n\r\n\r\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    authApi.register(email, password)\r\n        .then(() => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(setIsInitializedAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport type setErrorActionType = ReturnType<typeof setAppErrorAC>;\r\nexport type setStatusActionType = ReturnType<typeof setAppStatusAC>;\r\nexport type setIsInitializedActionType = ReturnType<typeof setIsInitializedAC>;\r\n\r\ntype ActionsType = setErrorActionType | setStatusActionType | setIsInitializedActionType\r\n\r\n\r\nexport default registrationReducer;","import React, {useEffect, useState} from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerTC, setAppErrorAC, setIsInitializedAC} from \"../../Redux/reg-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport style from \"./Registration.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nexport function Registration() {\r\n//useState\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [passwordConf, setPasswordConf] = useState<string>(\"\")\r\n//useSelectors\r\n    const isInitialized = useSelector<AppStateType, boolean>((state) => state.reg.isInitialized)\r\n    const status = useSelector<AppStateType, string>((state) => state.reg.status)\r\n    const error = useSelector<AppStateType, string | null>((state) => state.reg.error)\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const buttonCallback = () => {\r\n        if (password === passwordConf) {\r\n            dispatch(registerTC(email, password))\r\n        } else {\r\n            dispatch(setAppErrorAC(\"Password mismatch\"))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setIsInitializedAC(false))\r\n        dispatch(setAppErrorAC(null))\r\n    },[isInitialized])\r\n\r\n    if (isInitialized) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {status !== 'idle'? <Preloader/> : null}\r\n            <h1>Registration</h1>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>Email:</div>\r\n            <SuperInputText value={email} onChangeText={setEmail}/>\r\n            <div>password:</div>\r\n            <SuperInputText value={password} onChangeText={setPassword}/>\r\n            <div>confirm password:</div>\r\n            <SuperInputText value={passwordConf} onChangeText={setPasswordConf}/>\r\n            <div>\r\n                <SuperButton disabled={status !== 'idle'} onClick={buttonCallback}>Sign Up</SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../SuperComponents/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport function TestPage() {\r\n    return (\r\n\r\n        <div>\r\n            <h1>TestPage</h1>\r\n            <SuperInputText/>\r\n            <SuperButton>hello!!!!</SuperButton>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    );\r\n}\r\n","import { instance } from \"./fridayProject-api\";\r\nimport { cardsType, RequestStatusType } from \"../Redux/packs-reducer\";\r\n\r\n\r\n//api\r\n\r\nexport const packsApi = {\r\n\r\n    getPacks(\r\n        min?: number,\r\n        max?: number,\r\n        page?: number,\r\n        pageCount?: number,\r\n        packName?: string,\r\n        sortPacks?: string,\r\n        user_id?: string\r\n    ) {\r\n        return instance.get<responsePacksType>(`/cards/pack`,\r\n            { params: { min, max, page, pageCount, packName, sortPacks, user_id } })\r\n    },\r\n    setPacks(name: string) {\r\n        return instance.post(\"cards/pack\", { cardsPack: { name } })\r\n    },\r\n    deletePacks(id: string) {\r\n        return instance.delete(\"cards/pack\", { params: { id } })\r\n    },\r\n    updatePacks(_id: string, name: string) {\r\n        return instance.put(\"cards/pack\", { cardsPack: { _id, name } })\r\n    },\r\n\r\n    getCards(\r\n        cardsPack_id: string,\r\n        cardQuestion?: string,\r\n        min?: number,\r\n        max?: number,\r\n        sortCards?: string,\r\n        page?: number,\r\n        pageCount?: number\r\n    ) {\r\n        return instance.get<responseCardType>(\"/cards/card\",\r\n            {\r\n                params: {\r\n                    cardsPack_id,\r\n                    cardQuestion,\r\n                    min,\r\n                    max,\r\n                    sortCards,\r\n                    page,\r\n                    pageCount,\r\n                }\r\n            })\r\n    },\r\n    setCards(\r\n        cardsPack_id: string,\r\n        question?: string,\r\n        answer?: string\r\n    ) {\r\n        return instance.post(\"cards/card\", { card: { cardsPack_id, question, answer } })\r\n    },\r\n    deleteCards(id: string) {\r\n        return instance.delete(\"cards/card\", { params: { id } })\r\n    },\r\n    updateCards(_id: string, question?: string) {\r\n        return instance.put(\"cards/card\", { card: { _id, question } })\r\n    },\r\n    setGradeCards(card_id: string, grade: number) {\r\n        return instance.put(\"cards/grade\", { card_id, grade })\r\n    }\r\n\r\n}\r\n\r\n//types\r\nexport type responseCardType = {\r\n    cards: Array<ArrCardType>\r\n    cardsTotalCount: number,\r\n    maxGrade: number,\r\n    minGrade: number,\r\n    page: number,\r\n    pageCount: number,\r\n    packUserId: string,\r\n    error?: string,\r\n    isInitialized: boolean\r\n    sortCards: string\r\n    cardQuestion: string,\r\n    grade: number\r\n}\r\nexport type ArrCardType = {\r\n    answer: string,\r\n    question: string,\r\n    cardsPack_id: string,\r\n    grade: number,\r\n    shots: number,\r\n    user_id: string,\r\n    created: string,\r\n    updated: string,\r\n    _id: string\r\n}\r\n\r\nexport type getCardParams = {\r\n    cardAnswer?: string,\r\n    cardQuestion?: string,\r\n    cardsPack_id: string,\r\n    min?: number,\r\n    max?: number,\r\n    sortCards?: string,\r\n    page?: number,\r\n    pageCount?: number\r\n}\r\n\r\nexport type responsegGradeType = {\r\n\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}\r\n\r\n// type setCardParams = {\r\n//     cardsPack_id: string,\r\n//     question?: string,\r\n//     answer?: string,\r\n//     grade?: number\r\n//     shots?: number,\r\n//     answerlmg?: string,\r\n//     questionImg?: string,\r\n//     questionVideo?:string,\r\n//     answerVideo?: string\r\n// }\r\n\r\nexport type responsePacksType = {\r\n    cardPacks: Array<cardsType>,\r\n    cardPacksTotalCount: number,\r\n    minCardsCount: number,\r\n    maxCardsCount: number,\r\n    max: number,\r\n    min: number,\r\n    page: number,\r\n    pageCount: number,\r\n    error?: string,\r\n    isInitialized: boolean,\r\n    sortPacks: string,\r\n    status: RequestStatusType,\r\n    packName: string\r\n    user_id: string\r\n}\r\n\r\nexport type cardType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n    url: string\r\n}","import { Dispatch } from 'redux'\r\nimport { packsApi, responsePacksType } from \"../api/packs-api\";\r\nimport { AppStateType } from './store';\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 10,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 4,\r\n    min: 0,\r\n    max: 20,\r\n    page: 1,\r\n    pageCount: 4,\r\n    error: undefined,\r\n    isInitialized: false,\r\n    sortPacks: \"1update\",\r\n    status: 'idle',\r\n    packName: \"\",\r\n    user_id: \"\"\r\n}\r\ntype initialStateType = responsePacksType\r\n\r\nexport type cardsType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    cardsCount: number\r\n    created: string\r\n    updated: string\r\n    url: string\r\n}\r\n\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n\r\nconst packsReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"PACKS/GET-PACKS\":\r\n            return {\r\n                ...state,\r\n                cardPacks: action.packs.cardPacks,\r\n                cardPacksTotalCount: action.packs.cardPacksTotalCount,\r\n                minCardsCount: action.packs.minCardsCount,\r\n                maxCardsCount: action.packs.maxCardsCount,\r\n                page: action.packs.page,\r\n                pageCount: action.packs.pageCount,\r\n            }\r\n        case \"PACKS/SET-ERROR\":\r\n            return { ...state, error: action.error }\r\n        case \"PACKS/SET-IS-INITIALIZED\":\r\n            return { ...state, isInitialized: action.isInitialized }\r\n        case 'PACKS/SET-SEARCH-VALUE':\r\n            return { ...state, packName: action.value }\r\n        case \"PACKS/SET-STATUS\":\r\n            return { ...state, status: action.status }\r\n        case 'PACKS/SORT':\r\n            return { ...state, sortPacks: `${action.n}${action.sortValue}` }\r\n        case 'PACKS/SET-RANGE':\r\n            return { ...state, min: action.min, max: action.max }\r\n        case 'PACKS/SET-PAGE':\r\n            return { ...state, page: action.page }\r\n        case 'PACKS/SET-PAGECOUNT':\r\n            return { ...state, pageCount: action.value }\r\n        case 'PACKS/SET-USERID-FOR-PACKS':\r\n            return { ...state, user_id: action.value }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const setUserIdforPacksAC = (value: string) => ({ type: 'PACKS/SET-USERID-FOR-PACKS', value } as const)\r\nexport const setPageCountOfPacksAC = (value: number) => ({ type: 'PACKS/SET-PAGECOUNT', value } as const)\r\nexport const setPageOfPacksAC = (page: number) => ({ type: 'PACKS/SET-PAGE', page } as const)\r\nexport const setRangePacksAC = (min: number, max: number) => ({ type: 'PACKS/SET-RANGE', min, max } as const)\r\nexport const sortPackAC = (n: 1 | 0, sortValue: string) => ({ type: 'PACKS/SORT', n, sortValue } as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({ type: 'PACKS/SET-STATUS', status } as const)\r\nexport const getPacksAC = (packs: initialStateType) => ({ type: 'PACKS/GET-PACKS', packs } as const)\r\nexport const setAppErrorPacksAC = (error: string | undefined) => ({ type: 'PACKS/SET-ERROR', error } as const)\r\nexport const setIsInitializedPackAC = (isInitialized: boolean) => ({\r\n    type: 'PACKS/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\nexport const setSearchValuePackAC = (value: string) => ({ type: 'PACKS/SET-SEARCH-VALUE', value })\r\n\r\nexport const packsTC = () => (dispatch: Dispatch<any>, getState: () => AppStateType) => {\r\n    let state = getState().packs;\r\n    dispatch(setAppStatusAC(\"loading\"))\r\n    packsApi.getPacks(state.min, state.max, state.page, state.pageCount, state.packName, state.sortPacks, state.user_id)\r\n        .then((response) => {\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n            dispatch(getPacksAC(response.data))\r\n            dispatch(setIsInitializedPackAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const packsAddTC = (namePack: string) => (dispatch: Dispatch<any>) => {\r\n\r\n    packsApi.setPacks(namePack)\r\n        .then(() => {\r\n            dispatch(packsTC())\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport const packsDeleteTC = (id: string) => (dispatch: Dispatch<any>) => {\r\n    packsApi.deletePacks(id)\r\n        .then(() => {\r\n            dispatch(packsTC())\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport const packsUpdateTC = (_id: string, name: string) => (dispatch: Dispatch<any>) => {\r\n\r\n    packsApi.updatePacks(_id, name)\r\n        .then(() => {\r\n            dispatch(packsTC())\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport type setUserIdforPacksACType = ReturnType<typeof setUserIdforPacksAC>\r\nexport type setPageCountOfPacksACType = ReturnType<typeof setPageCountOfPacksAC>\r\nexport type setPageOfPacksACType = ReturnType<typeof setPageOfPacksAC>\r\nexport type setRangePacksACType = ReturnType<typeof setRangePacksAC>;\r\nexport type sortPackACType = ReturnType<typeof sortPackAC>;\r\nexport type setAppStatusTypeAC = ReturnType<typeof setAppStatusAC>;\r\nexport type getPacksTypeAC = ReturnType<typeof getPacksAC>;\r\nexport type setAppErrorPacksTypeAC = ReturnType<typeof setAppErrorPacksAC>;\r\nexport type setIsInitializedPackTypeAC = ReturnType<typeof setIsInitializedPackAC>;\r\nexport type setSearchValuePackTypeAC = { type: 'PACKS/SET-SEARCH-VALUE', value: string }\r\ntype ActionType = getPacksTypeAC\r\n    | setAppErrorPacksTypeAC\r\n    | setIsInitializedPackTypeAC\r\n    | setSearchValuePackTypeAC\r\n    | setAppStatusTypeAC\r\n    | sortPackACType\r\n    | setRangePacksACType\r\n    | setPageOfPacksACType\r\n    | setPageCountOfPacksACType\r\n    | setUserIdforPacksACType\r\nexport default packsReducer;","import { Dispatch } from 'redux'\r\nimport { packsApi, responseCardType } from \"../api/packs-api\";\r\nimport { authTC } from './login-reducer';\r\nimport { AppStateType } from './store';\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    cards: [],\r\n    cardsTotalCount: 3,\r\n    maxGrade: 0,\r\n    minGrade: 5,\r\n    page: 1,\r\n    pageCount: 4,\r\n    packUserId: \"\" as string,\r\n\r\n    grade: 2 as number,\r\n    error: undefined,\r\n    isInitialized: true,\r\n    sortCards: \"1update\",\r\n    cardQuestion: \"\"\r\n}\r\ntype initialStateType = responseCardType\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst cardsReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"CARDS/GET_CARDS\":\r\n            return {\r\n                ...state,\r\n                cards: action.cards.cards,\r\n                cardsTotalCount: action.cards.cardsTotalCount,\r\n                maxGrade: action.cards.maxGrade,\r\n                minGrade: action.cards.minGrade,\r\n                page: action.cards.page,\r\n                pageCount: action.cards.pageCount,\r\n                packUserId: action.cards.packUserId\r\n            }\r\n        case \"CARDS/SET-ERROR\":\r\n            return { ...state, error: action.error }\r\n        case \"CARDS/SET-IS-INITIALIZED\":\r\n            return { ...state, isInitialized: action.isInitialized }\r\n        case 'CARDS/SET-SEARCH-VALUE':\r\n            return { ...state, cardQuestion: action.value }\r\n        case 'CARDS/SORT':\r\n            return { ...state, sortCards: `${action.n}${action.sortValue}` }\r\n        case 'CARDS/SET-RANGE':\r\n            return { ...state, minGrade: action.min, maxGrade: action.max }\r\n        case 'CARDS/SET-PAGE':\r\n            return { ...state, page: action.page }\r\n        case 'CARDS/SET-PAGECOUNT':\r\n            return { ...state, pageCount: action.value }\r\n        case 'CARDS/SET-ID':\r\n            return { ...state, packUserId: action.userId }\r\n        case 'CARDS/SET-GRADE':\r\n            return { ...state, grade: action.grade }\r\n        default: return state\r\n    }\r\n\r\n}\r\nexport const setGradeAC = (grade: number) => ({ type: 'CARDS/SET-GRADE', grade } as const)\r\nexport const setPackUserIdAC = (userId: string) => ({ type: 'CARDS/SET-ID', userId } as const)\r\nexport const setPageCountOfCardsAC = (value: number) => ({ type: 'CARDS/SET-PAGECOUNT', value } as const)\r\nexport const setPageOfCardsAC = (page: number) => ({ type: 'CARDS/SET-PAGE', page } as const)\r\nexport const setRangeCardsAC = (min: number, max: number) => ({ type: 'CARDS/SET-RANGE', min, max } as const)\r\nexport const sortCardAC = (n: 1 | 0, sortValue: string) => ({ type: 'CARDS/SORT', n, sortValue } as const)\r\nexport const setSearchValueCardAC = (value: string) => ({ type: 'CARDS/SET-SEARCH-VALUE', value } as const)\r\nexport const getCardAC = (cards: initialStateType) => ({ type: 'CARDS/GET_CARDS', cards } as const)\r\nexport const setAppErrorPacksAC = (error: string | undefined) => ({ type: 'CARDS/SET-ERROR', error } as const)\r\nexport const setIsInitializedPackAC = (isInitialized: boolean) => ({\r\n    type: 'CARDS/SET-IS-INITIALIZED',\r\n    isInitialized\r\n} as const)\r\n\r\nexport const cardsTC = (cardsPack_id: string) => (dispatch: Dispatch<any>, getState: () => AppStateType) => {\r\n    let state = getState().cards;\r\n\r\n    packsApi.getCards(cardsPack_id, state.cardQuestion, state.minGrade, state.maxGrade, state.sortCards, state.page, state.pageCount,)\r\n        .then((response) => {\r\n            // dispatch(authTC())\r\n            dispatch(getCardAC(response.data))\r\n            dispatch(setIsInitializedPackAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport const cardsAdd = (cardsPack_id: string, question?: string, answer?: string) => (dispatch: Dispatch<any>) => {\r\n\r\n    packsApi.setCards(cardsPack_id, question, answer)\r\n        .then(() => {\r\n            dispatch(cardsTC(cardsPack_id))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport const cardsDeleteTC = (id: string, cardsPack_id: string) => (dispatch: Dispatch<any>) => {\r\n    packsApi.deleteCards(id)\r\n        .then(() => {\r\n            dispatch(cardsTC(cardsPack_id))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport const cardsUpdateTC = (id: string, cardsPack_id: string, question?: string) => (dispatch: Dispatch<any>) => {\r\n\r\n    packsApi.updateCards(id, question)\r\n        .then(() => {\r\n            dispatch(cardsTC(cardsPack_id))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\nexport const setGradeTC = (id: string, grade: number) => (dispatch: Dispatch<any>) => {\r\n\r\n    packsApi.setGradeCards(id, grade)\r\n        .then((res) => {\r\n            dispatch(setGradeAC(res.data.updatedGrade.grade))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorPacksAC(error.response.data.error))\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}\r\n\r\n\r\nexport type setGradeACType = ReturnType<typeof setGradeAC>\r\nexport type setPackUserIdACType = ReturnType<typeof setPackUserIdAC>\r\nexport type setPageCountOfCardsACType = ReturnType<typeof setPageCountOfCardsAC>\r\nexport type setPageOfCardsACType = ReturnType<typeof setPageOfCardsAC>\r\nexport type setRangeCardsACType = ReturnType<typeof setRangeCardsAC>;\r\nexport type sortCardACType = ReturnType<typeof sortCardAC>;\r\nexport type setSearchValueCardTypeAC = ReturnType<typeof setSearchValueCardAC>;\r\nexport type getCardsTypeAC = ReturnType<typeof getCardAC>;\r\nexport type setAppErrorPacksTypeAC = ReturnType<typeof setAppErrorPacksAC>;\r\nexport type setIsInitializedPackTypeAC = ReturnType<typeof setIsInitializedPackAC>;\r\n\r\ntype ActionType = getCardsTypeAC\r\n    | setAppErrorPacksTypeAC\r\n    | setIsInitializedPackTypeAC\r\n    | setSearchValueCardTypeAC\r\n    | sortCardACType\r\n    | setRangeCardsACType\r\n    | setPageOfCardsACType\r\n    | setPageCountOfCardsACType\r\n    | setPackUserIdACType\r\n    | setGradeACType\r\nexport default cardsReducer;","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setRangeCardsAC } from '../../../Redux/cards-reducer';\r\nimport { setRangePacksAC } from '../../../Redux/packs-reducer';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 600,\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n  },\r\n});\r\n\r\ntype PropsRangeType = {\r\n  min: number\r\n  max: number\r\n  target: \"packs\" | \"cards\"\r\n}\r\nexport default function RangeSlider(props: PropsRangeType) {\r\n  const dispatch = useDispatch()\r\n\r\n  const classes = useStyles();\r\n  const [values, setValue] = React.useState<number[]>([props.min, props.max]);\r\n\r\n  const handleChange = (e: any, values: number | number[]) => {\r\n    if (props.target === \"packs\") {\r\n      //@ts-ignore   //!<<<<---------------\r\n      dispatch(setRangePacksAC(values[0], values[1]));\r\n      setValue(values as number[]);\r\n    } else {\r\n      //@ts-ignore   //!<<<<---------------\r\n      dispatch(setRangeCardsAC(values[0], values[1]));\r\n      setValue(values as number[]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"range-slider\" gutterBottom>\r\n        Range\r\n      </Typography>\r\n      <Slider\r\n        value={values}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport s from './Search.module.css'\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport RangeSlider from './Range/RangeSlider'\r\n\r\ntype PropsType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n    target: \"packs\" | \"cards\"\r\n    inputCallback: (value: string) => void\r\n    btnCallback: () => void\r\n\r\n}\r\nexport const Search: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            Search:\r\n            <SuperInputText value={props.packName} onChangeText={props.inputCallback} />\r\n            <RangeSlider min={props.min} max={props.max} target={props.target} />\r\n            <SuperButton onClick={props.btnCallback}>Search</SuperButton>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype DeleteModalType = {\r\n    disabled: boolean,\r\n    callback: () => void\r\n}\r\n\r\nexport function DeleteItem(props: DeleteModalType) {\r\n    let [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const buttonCallback = () => {\r\n        props.callback()\r\n        setOpen(false)\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.disabled ?\r\n                <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} disabled>\r\n                    Del\r\n                </Button> : <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Del\r\n                </Button>}\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you serious?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Quit\r\n                    </Button>\r\n                    <Button onClick={buttonCallback} color=\"primary\" autoFocus>\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype UpdateItemPT = {\r\n    callback: (title: string, title2?: string) => void\r\n    value: string\r\n    // value2?: string\r\n    disabled: boolean\r\n}\r\n\r\nexport function UpdateItem(props: UpdateItemPT) {\r\n    const [open, setOpen] = React.useState(false);\r\n    let [title, setTitle] = React.useState(props.value);\r\n    // let [title2, setTitle2] = React.useState(props.value2);\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    // const changeTitle2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     setTitle2(e.currentTarget.value)\r\n    // }\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClickUPD = () => {\r\n        props.callback(title)\r\n        setOpen(false)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.disabled ?\r\n                <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} disabled>\r\n                    Update\r\n                </Button> : <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Update\r\n                </Button>}\r\n            <Dialog open={open} onClose={handleClickUPD} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update pls</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <TextField\r\n                        value={title}\r\n                        onChange={changeTitle}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        fullWidth\r\n                    />\r\n                    {/*{props.value2 && <TextField*/}\r\n                    {/*    value={title2}*/}\r\n                    {/*    onChange={changeTitle2}*/}\r\n                    {/*    autoFocus*/}\r\n                    {/*    margin=\"dense\"*/}\r\n                    {/*    id=\"name2\"*/}\r\n                    {/*    fullWidth*/}\r\n                    {/*/>}*/}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClickUPD} color=\"primary\">\r\n                        Update\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    cardsType,\r\n    packsDeleteTC,\r\n    packsUpdateTC,\r\n} from \"../../../Redux/packs-reducer\";\r\nimport {AppStateType} from '../../../Redux/store';\r\nimport s from \"./Pack.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DeleteItem} from \"../../../Modal/DeleteModal\";\r\nimport {UpdateItem} from \"../../../Modal/UpdateModal\";\r\n\r\ntype PropsType = {\r\n    card: cardsType\r\n}\r\n\r\nexport function Pack(props: PropsType) {\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteCallback = () => {\r\n        dispatch(packsDeleteTC(props.card._id))\r\n    }\r\n    const updateCallback = (name: string) => {\r\n        dispatch(packsUpdateTC(props.card._id, name))\r\n    }\r\n\r\n    const userID = useSelector<AppStateType, string>(state => state.loginPage.userData._id)\r\n\r\n    return <div className={s.packsBodyContainer} key={props.card._id}>\r\n        <div className={s.packsChild2}>{props.card.name}</div>\r\n        <div className={s.packsChild2}>{props.card.cardsCount}</div>\r\n        <div className={s.packsChild2}>{props.card.updated}</div>\r\n        <div className={s.packsChild2}>{props.card.created}</div>\r\n        <div className={s.packsChild2}>\r\n            <DeleteItem callback={deleteCallback} disabled={userID !== props.card.user_id}/>\r\n            <UpdateItem value={props.card.name} callback={updateCallback} disabled={userID !== props.card.user_id}/>\r\n\r\n            <NavLink to={`cards/${props.card._id}`}> cards </NavLink>\r\n            <NavLink to={`learn/${props.card._id}`}> Learn </NavLink>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}","import { ChangeEvent, useState } from 'react';\r\nimport s from './Paginator.module.css'\r\n\r\ntype PaginatorType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    pageCount: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    onChangeHandler: (e: ChangeEvent<HTMLSelectElement>) => void\r\n}\r\n\r\nexport function Paginator(props: PaginatorType) {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionSize = 5;\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (<div className={s.container}>\r\n        <select value={props.pageCount} onChange={(e) => props.onChangeHandler(e)} >\r\n            <option value={4}>4</option>\r\n            <option value={7}>7</option>\r\n            <option value={10}>10</option>\r\n            <option value={20}>20</option>\r\n            <option value={50}>50</option>\r\n        </select>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\r\n            return <span\r\n                className={props.currentPage === p ? s.selected : s.paginat}\r\n                onClick={() => props.onPageChanged(p)}\r\n            >{p}</span>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n\r\n    </div>)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './SortButton.module.css'\r\n\r\ntype PropsSortType = {\r\n    sortValue: string\r\n    sortPacks: string\r\n    sortCallback: (n: 1 | 0, sortValue: string) => void\r\n}\r\n\r\nexport const SortButton: React.FC<PropsSortType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <button onClick={() => props.sortCallback(1,  props.sortValue)}>&#5123;</button>\r\n            <button onClick={() => props.sortCallback(0,  props.sortValue)}>&#5121;</button>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntype AddItemPT = {\r\n    callback: (title: string, title2?: string) => void\r\n    disabled?: boolean\r\n    id?: number\r\n}\r\n\r\nexport function AddedItem(props: AddItemPT) {\r\n    const [open, setOpen] = React.useState(false);\r\n    let [title, setTitle] = React.useState(\"\");\r\n    let [title2, setTitle2] = React.useState(\"\");\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    const changeTitle2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle2(e.currentTarget.value)\r\n    }\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClickUPD = () => {\r\n        props.callback(title, title2)\r\n        setOpen(false)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.disabled ?\r\n                <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} disabled>\r\n                    Add\r\n                </Button> : <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Add\r\n                </Button>}\r\n            <Dialog open={open} onClose={handleClickUPD} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">add</DialogTitle>\r\n                <DialogContent>\r\n                    Question\r\n                    <TextField\r\n                        value={title}\r\n                        onChange={changeTitle}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        fullWidth\r\n                    />\r\n                    Answer\r\n                    {props.id && < TextField\r\n                        value={title2}\r\n                        onChange={changeTitle2}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name2\"\r\n                        fullWidth\r\n                        />}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClickUPD} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { ChangeEvent, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    sortPackAC,\r\n    packsAddTC,\r\n    packsTC,\r\n    setSearchValuePackAC,\r\n    setPageOfPacksAC,\r\n    setPageCountOfPacksAC,\r\n    setUserIdforPacksAC,\r\n} from \"../../Redux/packs-reducer\";\r\nimport s from \"./Packs.module.css\"\r\nimport { AppStateType } from \"../../Redux/store\";\r\nimport { Search } from '../../Common/Search/Search';\r\nimport { Pack } from './Pack/Pack';\r\nimport { Paginator } from '../../Common/Paginator/Paginator'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport { SortButton } from '../../Common/SortButton/SortButton';\r\nimport { responsePacksType } from '../../api/packs-api';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AddedItem } from \"../../Modal/AddedModal\";\r\nimport { useState } from 'react';\r\n\r\nexport function Packs() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const { min, max, page, pageCount, packName, sortPacks, error, cardPacks, cardPacksTotalCount, user_id } = useSelector<AppStateType, responsePacksType>(state => state.packs)\r\n    const status = useSelector<AppStateType, string>((state) => state.reg.status)\r\n    const isOwner = useSelector<AppStateType, string>(state => state.loginPage.userData._id)\r\n\r\n    // let [show, setShow] = useState(\"\")\r\n    // const callback = () => {\r\n    //     setShow(isOwner)\r\n    // }\r\n\r\n    useEffect(() => {\r\n        dispatch(packsTC())\r\n    }, [page, pageCount, sortPacks, user_id])\r\n\r\n    const addedCallback = (name: string) => {\r\n        dispatch(packsAddTC(name))\r\n    }\r\n\r\n    //пагинация\r\n    const onPageChanged = (page: number) => {\r\n        dispatch(setPageOfPacksAC(page))\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(setPageCountOfPacksAC(Number(e.currentTarget.value)))\r\n    }\r\n\r\n    //поисковая строка\r\n    const setSearchResult = (value: string) => {\r\n        dispatch(setSearchValuePackAC(value))\r\n\r\n    }\r\n    const searchPackCallback = () => {\r\n        dispatch(packsTC())\r\n    }\r\n\r\n    //сортировка \r\n    const sortingPack = (n: 1 | 0, sortValue: string) => {\r\n\r\n        dispatch(sortPackAC(n, sortValue))\r\n    }\r\n    if (isAuth === \"\") {\r\n        return <Redirect to={\"/login\"} />;\r\n    }\r\n\r\n    return <div className={s.container}>\r\n        PACKS\r\n        {status !== 'idle' ? <Preloader /> : null}\r\n        <br />\r\n        {error && <div>{error}</div>}\r\n        <br />\r\n        <Search\r\n            packName={packName}\r\n            min={min}\r\n            max={max}\r\n            target=\"packs\"\r\n            inputCallback={setSearchResult}\r\n            btnCallback={searchPackCallback}\r\n\r\n        />\r\n        <br />\r\n\r\n        <button onClick={() => { dispatch(setUserIdforPacksAC(isOwner)) }}>Мои колоды</button>\r\n        <button onClick={() => { dispatch(setUserIdforPacksAC(\"\")) }}>Все колоды</button>\r\n     <hr />\r\n        <div className={s.packsHeaderContainer}>\r\n            <div className={s.packsChild}>Name <SortButton sortValue=\"name\" sortPacks={sortPacks}\r\n                sortCallback={sortingPack} /></div>\r\n            <div className={s.packsChild}>cardsCount<SortButton sortValue=\"cardsCount\" sortPacks={sortPacks}\r\n                sortCallback={sortingPack} /></div>\r\n            <div className={s.packsChild}>updated<SortButton sortValue=\"updated\" sortPacks={sortPacks}\r\n                sortCallback={sortingPack} /></div>\r\n            <div className={s.packsChild}>created<SortButton sortValue=\"created\" sortPacks={sortPacks}\r\n                sortCallback={sortingPack} /></div>\r\n            <div className={s.packsChild}>\r\n\r\n                <AddedItem callback={addedCallback} />\r\n            </div>\r\n        </div>\r\n\r\n        {cardPacks.map(m => {\r\n\r\n            return <Pack card={m} key={m._id} />\r\n\r\n        })}\r\n        <Paginator totalItemsCount={cardPacksTotalCount} pageSize={pageCount} currentPage={page} pageCount={pageCount}\r\n            onPageChanged={onPageChanged} onChangeHandler={onChangeHandler} />\r\n    </div>\r\n\r\n}","import React, {ChangeEvent, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Search} from '../../Common/Search/Search';\r\nimport s from \"./Cards.module.css\"\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport {\r\n    cardsAdd,\r\n    cardsDeleteTC,\r\n    cardsTC,\r\n    cardsUpdateTC,\r\n    setPackUserIdAC,\r\n    setPageCountOfCardsAC,\r\n    setPageOfCardsAC,\r\n    setSearchValueCardAC,\r\n    sortCardAC\r\n} from \"../../Redux/cards-reducer\";\r\nimport {ArrCardType, responseCardType} from \"../../api/packs-api\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {Paginator} from './../../Common/Paginator/Paginator'\r\nimport {SortButton} from '../../Common/SortButton/SortButton';\r\nimport {DeleteItem} from \"../../Modal/DeleteModal\";\r\nimport {UpdateItem} from \"../../Modal/UpdateModal\";\r\nimport {AddedItem} from \"../../Modal/AddedModal\";\r\n\r\nexport function Cards() {\r\n\r\n    const dispatch = useDispatch()\r\n    const {packId} = useParams<{ packId: string }>()\r\n    //const cardsPackId = useSelector<AppStateType, string>(state => state.cards.packUserId)\r\n    const cards = useSelector<AppStateType, Array<ArrCardType>>(state => state.cards.cards)\r\n    const error = useSelector<AppStateType, string | undefined>(state => state.packs.error)\r\n    const userID = useSelector<AppStateType, string>(state => state.loginPage.userData._id)\r\n    const {cardsTotalCount, page, pageCount, minGrade, maxGrade, sortCards, cardQuestion} = useSelector<AppStateType, responseCardType>(state => state.cards)\r\n\r\n    useEffect(() => {\r\n        dispatch(setPackUserIdAC(packId))\r\n        dispatch(cardsTC(packId))\r\n    }, [page, pageCount, sortCards])\r\n\r\n    const addCallback = (question?: string, answer?: string) => {\r\n        dispatch(cardsAdd(packId, question, answer))\r\n    }\r\n\r\n    //пагинация\r\n    const onPageChanged = (newPage: number) => {\r\n        dispatch(setPageOfCardsAC(newPage))\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(setPageCountOfCardsAC(Number(e.currentTarget.value)))\r\n    }\r\n    //поиск\r\n    const setSearchResult = (value: string) => {\r\n        dispatch(setSearchValueCardAC(value))\r\n    }\r\n    const searchCardCallback = () => {\r\n        dispatch(cardsTC(packId))\r\n    }\r\n\r\n    //сортировка \r\n    const sortingCard = (n: 1 | 0, sortValue: string) => {\r\n        dispatch(sortCardAC(n, sortValue))\r\n    }\r\n\r\n    return <div>\r\n        Cards\r\n        {error && <div>{error}</div>}\r\n        <br/>\r\n        <Search\r\n            packName={cardQuestion}\r\n            min={minGrade}\r\n            max={maxGrade}\r\n            target=\"cards\"\r\n            inputCallback={setSearchResult}\r\n            btnCallback={searchCardCallback}\r\n\r\n        />\r\n        <br/>\r\n        <div className={s.packsHeaderContainer}>\r\n            <div className={s.packsChild}>question<SortButton sortValue=\"question\" sortPacks={sortCards}\r\n                                                              sortCallback={sortingCard}/></div>\r\n            <div className={s.packsChild}>answer<SortButton sortValue=\"answer\" sortPacks={sortCards}\r\n                                                            sortCallback={sortingCard}/></div>\r\n            <div className={s.packsChild}>Grade<SortButton sortValue=\"grade\" sortPacks={sortCards}\r\n                                                           sortCallback={sortingCard}/></div>\r\n            <div className={s.packsChild}>updated<SortButton sortValue=\"updated\" sortPacks={sortCards}\r\n                                                             sortCallback={sortingCard}/></div>\r\n            <div className={s.packsChild}>created<SortButton sortValue=\"created\" sortPacks={sortCards}\r\n                                                             sortCallback={sortingCard}/></div>\r\n            <AddedItem callback={addCallback} id={2}/>\r\n            {/*<div className={s.packsChild}>*/}\r\n            {/*    <button onClick={addCallback}>add</button>*/}\r\n\r\n            {/*</div>*/}\r\n        </div>\r\n\r\n        {cards.map(m => {\r\n            const deleteCallback = () => {\r\n                dispatch(cardsDeleteTC(m._id, m.cardsPack_id))\r\n            }\r\n            const updateCallback = (question: string) => {\r\n                dispatch(cardsUpdateTC(m._id, m.cardsPack_id, question))\r\n            }\r\n            return <div className={s.packsBodyContainer}>\r\n                <div className={s.packsChild2}>{m.question}</div>\r\n                <div className={s.packsChild2}>{m.answer}</div>\r\n                <div className={s.packsChild2}>{m.grade}</div>\r\n                <div className={s.packsChild2}>{m.updated}</div>\r\n                <div className={s.packsChild2}>{m.created}</div>\r\n                <div className={s.packsChild2}>\r\n                    <DeleteItem disabled={userID !== m.user_id} callback={deleteCallback}/>\r\n                    <UpdateItem callback={updateCallback}\r\n                                value={m.question}\r\n                        // value2 = {m.answer}\r\n                                disabled={userID !== m.user_id}/>\r\n                    {/*<button disabled={userID !== m.user_id}*/}\r\n                    {/*    onClick={updateCallback()}>upd)*/}\r\n                    {/*</button>*/}\r\n                </div>\r\n            </div>\r\n        })}\r\n        <Paginator totalItemsCount={cardsTotalCount} pageSize={pageCount} currentPage={page} pageCount={pageCount}\r\n                   onPageChanged={onPageChanged} onChangeHandler={onChangeHandler}/>\r\n    </div>\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\n// import {DEV_VERSION} from \"../../../config\";\r\n// import ButtonNya from \"../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import {AppStoreType} from \"../../../cnf-1-main/m-2-bll/store\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { ArrCardType } from \"../../api/packs-api\";\r\nimport { cardsTC, setGradeTC } from \"../../Redux/cards-reducer\";\r\nimport { AppStateType } from \"../../Redux/store\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\n// import {getCards} from \"../../f-2-cards/c-2-cards/c-2-bll/getCardsThunk\";\r\n// import {CardType} from \"../../f-2-cards/c-2-cards/c-2-bll/CardsInitState\";\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: ArrCardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n        const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n        return { sum: newSum, id: newSum < rand ? i : acc.id }\r\n    }\r\n        , { sum: 0, id: -1 });\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nconst LearnPage = () => {\r\n    const isAuth = useSelector<AppStateType, string>(state => state.loginPage.isAuth)\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    // const [first, setFirst] = useState<boolean>(0);\r\n    const { cards } = useSelector((state: AppStateType) => state.cards);\r\n    // const { id } = useParams();\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const [card, setCard] = useState<ArrCardType>({\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        cardsPack_id: '',\r\n        grade: 0,\r\n        shots: 0,\r\n        user_id: '',\r\n        created: '',\r\n        updated: '',\r\n        _id: 'fake'\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(cardsTC(id))\r\n\r\n        if (first) {\r\n            dispatch(cardsTC(id));\r\n            setFirst(false);\r\n        }\r\n\r\n        console.log('cards', cards)\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, id,\r\n        // dispatch, id, cards, first\r\n    ]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            // dispatch\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n    if (isAuth === \"\") { return <Redirect to={\"/login\"} />; }\r\n    return (\r\n        <div>\r\n            LearnPage\r\n\r\n            <div>{card.question}</div>\r\n            <div>\r\n                <SuperButton onClick={() => setIsChecked(true)}>check</SuperButton>\r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <div>{card.answer}</div>\r\n\r\n                    {grades.map((g, i) => (\r\n                        <SuperButton key={'grade-' + i} onClick={() => {\r\n                            dispatch(setGradeTC(card._id, i + 1))\r\n                        }}>{g}</SuperButton>\r\n                    ))}\r\n                    <div>grade - {card.grade}</div>\r\n                    <div>shots - {card.shots}</div>\r\n                    <div><SuperButton onClick={onNext}>next</SuperButton></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LearnPage;","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { Page404 } from \"./Components/404/Page404\";\r\nimport { Loginization } from \"./Components/Loginization/Loginization\";\r\nimport { NewPassword } from \"./Components/NewPassword/NewPassword\";\r\nimport { PasswordRecovery } from \"./Components/PasswordRecovery/PasswordRecovery\";\r\nimport { Profile } from \"./Components/Profile/Profile\";\r\nimport { Registration } from \"./Components/Registration/Registration\";\r\nimport { TestPage } from \"./Components/TestPage/TestPage\";\r\nimport { Packs } from \"./Components/Packs/Packs\";\r\nimport { Cards } from \"./Components/Cards/Cards\";\r\nimport LearnPage from './Components/LearnPage/LearnPage';\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    NEW_PASS: '/newPassword/:token',\r\n    RECOVERY_PASS: '/recoveryPass',\r\n    PROFILE: '/profile',\r\n    REGISTRATION: '/registration',\r\n    TEST_PAGE: '/testt',\r\n    CARDS_PAGE: '/cards/:packId',\r\n    PACKS_PAGE: '/packs',\r\n    LEARN_PAGE: '/learn/:id'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*//Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*exact нужен чтоб указать полное совпадение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.NEW_PASS} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.RECOVERY_PASS} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.REGISTRATION} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.TEST_PAGE} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PACKS_PAGE} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.CARDS_PAGE} />} />\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LEARN_PAGE} />} />\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Loginization />} />\r\n                <Route path={PATH.NEW_PASS} render={() => <NewPassword />} />\r\n                <Route path={PATH.RECOVERY_PASS} render={() => <PasswordRecovery />} />\r\n                <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration />} />\r\n                <Route path={PATH.TEST_PAGE} render={() => <TestPage />} />\r\n                <Route path={PATH.PACKS_PAGE} render={() => <Packs />} />\r\n                <Route path={PATH.CARDS_PAGE} render={() => <Cards />} />\r\n                <Route path={PATH.LEARN_PAGE} render={() => <LearnPage />} />\r\n\r\n                {/*    // add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Page404 />} />\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <NavLink to={PATH.LOGIN}>Login |</NavLink>\r\n            <NavLink to={PATH.REGISTRATION}> Registration  |</NavLink>\r\n            <NavLink to={PATH.NEW_PASS}> NewPassword |</NavLink>\r\n            <NavLink to={PATH.PROFILE}> Profile  |</NavLink>\r\n            <NavLink to={PATH.RECOVERY_PASS}> PasswordRecovery | </NavLink>\r\n            <NavLink to={PATH.PACKS_PAGE}> PACKS  |</NavLink>\r\n            {/* <NavLink to={PATH.CARDS_PAGE}>CARDS </NavLink> */}\r\n            <NavLink to={PATH.TEST_PAGE}> Super Component </NavLink>\r\n            {/*// add NavLinks*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\n\r\nfunction App() {\r\n    console.log(\"Hello\")\r\n  return (\r\n\r\n    <div >\r\n     <h1>Hello World</h1>\r\n        <Header/>\r\n        <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\n\r\nconst initialState = {}\r\n\r\nconst profileReducer = (state = initialState, action: any) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default profileReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport newPasswordReducer from \"./new-password-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport loginReducer from \"./login-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport registrationReducer from \"./reg-reducer\";\r\nimport PasswordRecoveryReducer from \"./password-recovery-reducer\";\r\nimport packsReducer from \"./packs-reducer\";\r\nimport cardsReducer from \"./cards-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    loginPage: loginReducer,\r\n    profile: profileReducer,\r\n    newPassPage: newPasswordReducer,\r\n    recovPass: PasswordRecoveryReducer,\r\n    reg: registrationReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsHeaderContainer\":\"Cards_packsHeaderContainer__vVG7F\",\"packsChild\":\"Cards_packsChild__1Xo8l\",\"packsBodyContainer\":\"Cards_packsBodyContainer__1zB6l\",\"packsChild2\":\"Cards_packsChild2__2bA1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsHeaderContainer\":\"Packs_packsHeaderContainer__3SDK3\",\"packsChild\":\"Packs_packsChild__3dIl3\",\"packsBodyContainer\":\"Packs_packsBodyContainer__385kX\",\"packsChild2\":\"Packs_packsChild2__1jNrC\",\"container\":\"Packs_container__1zSjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsChild\":\"Pack_packsChild__36JO5\",\"packsBodyContainer\":\"Pack_packsBodyContainer__22uAN\",\"packsChild2\":\"Pack_packsChild2__eM7VU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Registration_formControl__3JqRK\",\"error\":\"Registration_error__2xAqK\",\"formSummaryError\":\"Registration_formSummaryError__hUfR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1U37C\",\"errorInput\":\"SuperInputText_errorInput__MeQdj\",\"error\":\"SuperInputText_error__2n6Sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Paginator_selected__OXT0r\",\"paginat\":\"Paginator_paginat__2txDy\",\"container\":\"Paginator_container__3pfBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__hX_R6\",\"red\":\"SuperButton_red__KgCuj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Vh9tc\",\"spanClassName\":\"SuperCheckbox_spanClassName__1qBHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Loginization_formControl__3Nfkp\",\"error\":\"Loginization_error__2qPL9\",\"formSummaryError\":\"Loginization_formSummaryError__1kv9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__3QO5Z\"};"],"sourceRoot":""}